<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="48" total="128" passed="78" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-18T16:09:02Z" name="CRIP Automation Script" finished-at="2022-06-18T16:20:06Z" duration-ms="664416">
    <groups>
    </groups>
    <test started-at="2022-06-18T16:09:02Z" name="com.SauceDemo Tests" finished-at="2022-06-18T16:15:56Z" duration-ms="414532">
      <class name="saucedemotests.HyperLink">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HyperLink@7d7758be]" started-at="2022-06-18T16:09:54Z" name="setUp" finished-at="2022-06-18T16:09:56Z" duration-ms="2678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HyperLink@7d7758be]" started-at="2022-06-18T16:09:56Z" name="startExtent" finished-at="2022-06-18T16:09:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HyperLink.clickTryItFreeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickTryItFreeTest()[pri:0, instance:saucedemotests.HyperLink@7d7758be]" started-at="2022-06-18T16:09:56Z" name="clickTryItFreeTest" finished-at="2022-06-18T16:10:08Z" duration-ms="11480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTryItFreeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HyperLink@7d7758be]" started-at="2022-06-18T16:10:08Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:09Z" duration-ms="1229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTryItFreeTest status=SUCCESS method=HyperLink.clickTryItFreeTest()[pri:0, instance:saucedemotests.HyperLink@7d7758be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HyperLink@7d7758be]" started-at="2022-06-18T16:10:09Z" name="tearDown" finished-at="2022-06-18T16:10:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.HyperLink -->
      <class name="saucedemotests.Login">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:51Z" name="setUp" finished-at="2022-06-18T16:12:54Z" duration-ms="3344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:54Z" name="startExtent" finished-at="2022-06-18T16:12:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.invalidLoginWithPerformanceGlitchUserTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="invalidLoginWithPerformanceGlitchUserTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:54Z" name="invalidLoginWithPerformanceGlitchUserTest" finished-at="2022-06-18T16:12:55Z" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginWithPerformanceGlitchUserTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:55Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:56Z" duration-ms="1034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginWithPerformanceGlitchUserTest status=SUCCESS method=Login.invalidLoginWithPerformanceGlitchUserTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:56Z" name="setUp" finished-at="2022-06-18T16:12:59Z" duration-ms="2826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:56Z" name="tearDown" finished-at="2022-06-18T16:12:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:59Z" name="startExtent" finished-at="2022-06-18T16:12:59Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.invalidLoginWithProblemUserTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="invalidLoginWithProblemUserTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:59Z" name="invalidLoginWithProblemUserTest" finished-at="2022-06-18T16:12:59Z" duration-ms="686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginWithProblemUserTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:12:59Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:01Z" duration-ms="1089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginWithProblemUserTest status=SUCCESS method=Login.invalidLoginWithProblemUserTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:01Z" name="tearDown" finished-at="2022-06-18T16:13:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:01Z" name="setUp" finished-at="2022-06-18T16:13:03Z" duration-ms="2770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:03Z" name="startExtent" finished-at="2022-06-18T16:13:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.invalidLoginWithStandardUserTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="invalidLoginWithStandardUserTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:03Z" name="invalidLoginWithStandardUserTest" finished-at="2022-06-18T16:13:04Z" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginWithStandardUserTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:04Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:05Z" duration-ms="1070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginWithStandardUserTest status=SUCCESS method=Login.invalidLoginWithStandardUserTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:05Z" name="tearDown" finished-at="2022-06-18T16:13:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:05Z" name="setUp" finished-at="2022-06-18T16:13:08Z" duration-ms="2605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:08Z" name="startExtent" finished-at="2022-06-18T16:13:08Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.lockedOutUserLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="lockedOutUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:08Z" name="lockedOutUserLoginTest" finished-at="2022-06-18T16:13:09Z" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutUserLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:09Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:10Z" duration-ms="1358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutUserLoginTest status=SUCCESS method=Login.lockedOutUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:10Z" name="tearDown" finished-at="2022-06-18T16:13:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:10Z" name="setUp" finished-at="2022-06-18T16:13:13Z" duration-ms="2965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:13Z" name="startExtent" finished-at="2022-06-18T16:13:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.performanceGlitchUserLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="performanceGlitchUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:13Z" name="performanceGlitchUserLoginTest" finished-at="2022-06-18T16:13:19Z" duration-ms="6292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performanceGlitchUserLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:19Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:20Z" duration-ms="1101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performanceGlitchUserLoginTest status=SUCCESS method=Login.performanceGlitchUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:20Z" name="tearDown" finished-at="2022-06-18T16:13:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:20Z" name="setUp" finished-at="2022-06-18T16:13:23Z" duration-ms="3055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:23Z" name="startExtent" finished-at="2022-06-18T16:13:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.problemUserLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="problemUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:23Z" name="problemUserLoginTest" finished-at="2022-06-18T16:13:24Z" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemUserLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:24Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:26Z" duration-ms="1379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemUserLoginTest status=SUCCESS method=Login.problemUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:26Z" name="tearDown" finished-at="2022-06-18T16:13:26Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:26Z" name="setUp" finished-at="2022-06-18T16:13:28Z" duration-ms="2848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:28Z" name="startExtent" finished-at="2022-06-18T16:13:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.standardUserLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="standardUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:28Z" name="standardUserLoginTest" finished-at="2022-06-18T16:13:29Z" duration-ms="1058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- standardUserLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:29Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:31Z" duration-ms="1388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=standardUserLoginTest status=SUCCESS method=Login.standardUserLoginTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:31Z" name="tearDown" finished-at="2022-06-18T16:13:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:31Z" name="setUp" finished-at="2022-06-18T16:13:34Z" duration-ms="2938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginButtonTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:34Z" name="validateLoginButtonTest" finished-at="2022-06-18T16:13:34Z" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:34Z" name="startExtent" finished-at="2022-06-18T16:13:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.validateLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:34Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:35Z" duration-ms="1220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginButtonTest status=SUCCESS method=Login.validateLoginButtonTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:35Z" name="tearDown" finished-at="2022-06-18T16:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:35Z" name="setUp" finished-at="2022-06-18T16:13:39Z" duration-ms="3677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:39Z" name="startExtent" finished-at="2022-06-18T16:13:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.validateLoginButtonWithNoCredentialsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="validateLoginButtonWithNoCredentialsTest()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:39Z" name="validateLoginButtonWithNoCredentialsTest" finished-at="2022-06-18T16:13:39Z" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginButtonWithNoCredentialsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:39Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:40Z" duration-ms="1097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginButtonWithNoCredentialsTest status=SUCCESS method=Login.validateLoginButtonWithNoCredentialsTest()[pri:0, instance:saucedemotests.Login@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2f01783a]" started-at="2022-06-18T16:13:40Z" name="tearDown" finished-at="2022-06-18T16:13:40Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.Login -->
      <class name="saucedemotests.MenuBar">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:40Z" name="setUp" finished-at="2022-06-18T16:13:43Z" duration-ms="3236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:43Z" name="startExtent" finished-at="2022-06-18T16:13:43Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarAboutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="menuBarAboutTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:43Z" name="menuBarAboutTest" finished-at="2022-06-18T16:13:47Z" duration-ms="3739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarAboutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:47Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:49Z" duration-ms="2120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarAboutTest status=SUCCESS method=MenuBar.menuBarAboutTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:49Z" name="tearDown" finished-at="2022-06-18T16:13:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:49Z" name="setUp" finished-at="2022-06-18T16:13:52Z" duration-ms="3135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:52Z" name="startExtent" finished-at="2022-06-18T16:13:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarAllItemsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="menuBarAllItemsTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:52Z" name="menuBarAllItemsTest" finished-at="2022-06-18T16:13:54Z" duration-ms="1817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarAllItemsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:54Z" name="afterEachTestMethod" finished-at="2022-06-18T16:13:56Z" duration-ms="1418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarAllItemsTest status=SUCCESS method=MenuBar.menuBarAllItemsTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:56Z" name="setUp" finished-at="2022-06-18T16:13:59Z" duration-ms="3507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:56Z" name="tearDown" finished-at="2022-06-18T16:13:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:59Z" name="startExtent" finished-at="2022-06-18T16:13:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="menuBarLogoutTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:13:59Z" name="menuBarLogoutTest" finished-at="2022-06-18T16:14:01Z" duration-ms="1606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:14:01Z" name="afterEachTestMethod" finished-at="2022-06-18T16:14:02Z" duration-ms="1183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarLogoutTest status=SUCCESS method=MenuBar.menuBarLogoutTest()[pri:0, instance:saucedemotests.MenuBar@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@68878f6d]" started-at="2022-06-18T16:14:02Z" name="tearDown" finished-at="2022-06-18T16:14:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.MenuBar -->
      <class name="saucedemotests.AddItemsToCart">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:02Z" name="setUp" finished-at="2022-06-18T16:09:08Z" duration-ms="6609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:08Z" name="startExtent" finished-at="2022-06-18T16:09:08Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBackPackToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBackPackToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:08Z" name="addBackPackToCartTest" finished-at="2022-06-18T16:09:10Z" duration-ms="1268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBackPackToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:10Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:12Z" duration-ms="1859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBackPackToCartTest status=SUCCESS method=AddItemsToCart.addBackPackToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:12Z" name="tearDown" finished-at="2022-06-18T16:09:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:12Z" name="setUp" finished-at="2022-06-18T16:09:14Z" duration-ms="2757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:14Z" name="startExtent" finished-at="2022-06-18T16:09:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBikeLightToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBikeLightToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:14Z" name="addBikeLightToCartTest" finished-at="2022-06-18T16:09:15Z" duration-ms="1023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBikeLightToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:15Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:17Z" duration-ms="1231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBikeLightToCartTest status=SUCCESS method=AddItemsToCart.addBikeLightToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:17Z" name="tearDown" finished-at="2022-06-18T16:09:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:17Z" name="setUp" finished-at="2022-06-18T16:09:20Z" duration-ms="3351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:20Z" name="startExtent" finished-at="2022-06-18T16:09:20Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBoltShirtToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBoltShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:20Z" name="addBoltShirtToCartTest" finished-at="2022-06-18T16:09:21Z" duration-ms="1088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBoltShirtToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:21Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:22Z" duration-ms="1356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBoltShirtToCartTest status=SUCCESS method=AddItemsToCart.addBoltShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:22Z" name="tearDown" finished-at="2022-06-18T16:09:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:22Z" name="setUp" finished-at="2022-06-18T16:09:25Z" duration-ms="2620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:25Z" name="startExtent" finished-at="2022-06-18T16:09:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addFleeceJacketToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addFleeceJacketToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:25Z" name="addFleeceJacketToCartTest" finished-at="2022-06-18T16:09:26Z" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFleeceJacketToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:26Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:27Z" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFleeceJacketToCartTest status=SUCCESS method=AddItemsToCart.addFleeceJacketToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:27Z" name="tearDown" finished-at="2022-06-18T16:09:27Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:27Z" name="setUp" finished-at="2022-06-18T16:09:29Z" duration-ms="2437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:29Z" name="startExtent" finished-at="2022-06-18T16:09:29Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addMultipleItemsToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addMultipleItemsToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:29Z" name="addMultipleItemsToCartTest" finished-at="2022-06-18T16:09:31Z" duration-ms="1761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleItemsToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:31Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:32Z" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleItemsToCartTest status=SUCCESS method=AddItemsToCart.addMultipleItemsToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:32Z" name="setUp" finished-at="2022-06-18T16:09:35Z" duration-ms="2725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:32Z" name="tearDown" finished-at="2022-06-18T16:09:32Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:35Z" name="startExtent" finished-at="2022-06-18T16:09:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addOnesieToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addOnesieToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:35Z" name="addOnesieToCartTest" finished-at="2022-06-18T16:09:36Z" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnesieToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:36Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:37Z" duration-ms="1118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOnesieToCartTest status=SUCCESS method=AddItemsToCart.addOnesieToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:37Z" name="setUp" finished-at="2022-06-18T16:09:40Z" duration-ms="2601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:37Z" name="tearDown" finished-at="2022-06-18T16:09:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:40Z" name="startExtent" finished-at="2022-06-18T16:09:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addRedShirtToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addRedShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:40Z" name="addRedShirtToCartTest" finished-at="2022-06-18T16:09:41Z" duration-ms="1300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRedShirtToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:41Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:42Z" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRedShirtToCartTest status=SUCCESS method=AddItemsToCart.addRedShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@4a07d605]" started-at="2022-06-18T16:09:42Z" name="tearDown" finished-at="2022-06-18T16:09:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.AddItemsToCart -->
      <class name="saucedemotests.Icons">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:21Z" name="setUp" finished-at="2022-06-18T16:12:23Z" duration-ms="2033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:23Z" name="startExtent" finished-at="2022-06-18T16:12:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.facebookIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="facebookIconTest()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:23Z" name="facebookIconTest" finished-at="2022-06-18T16:12:29Z" duration-ms="6022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:29Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:30Z" duration-ms="1051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=facebookIconTest status=SUCCESS method=Icons.facebookIconTest()[pri:0, instance:saucedemotests.Icons@68746f22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:30Z" name="tearDown" finished-at="2022-06-18T16:12:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:30Z" name="setUp" finished-at="2022-06-18T16:12:33Z" duration-ms="3030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:33Z" name="startExtent" finished-at="2022-06-18T16:12:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.linkedInIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="linkedInIconTest()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:33Z" name="linkedInIconTest" finished-at="2022-06-18T16:12:39Z" duration-ms="6206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedInIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:39Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:40Z" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=linkedInIconTest status=SUCCESS method=Icons.linkedInIconTest()[pri:0, instance:saucedemotests.Icons@68746f22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:40Z" name="tearDown" finished-at="2022-06-18T16:12:40Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:40Z" name="setUp" finished-at="2022-06-18T16:12:43Z" duration-ms="3072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:43Z" name="startExtent" finished-at="2022-06-18T16:12:43Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.twitterIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="twitterIconTest()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:43Z" name="twitterIconTest" finished-at="2022-06-18T16:12:49Z" duration-ms="6149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twitterIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:49Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:51Z" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=twitterIconTest status=SUCCESS method=Icons.twitterIconTest()[pri:0, instance:saucedemotests.Icons@68746f22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@68746f22]" started-at="2022-06-18T16:12:51Z" name="tearDown" finished-at="2022-06-18T16:12:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.Icons -->
      <class name="saucedemotests.SearchBar">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:14:35Z" name="setUp" finished-at="2022-06-18T16:14:38Z" duration-ms="2971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:14:38Z" name="startExtent" finished-at="2022-06-18T16:14:38Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.SearchBar.searchAndRedirectBackToHomeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchAndRedirectBackToHomeTest()[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:14:38Z" name="searchAndRedirectBackToHomeTest" finished-at="2022-06-18T16:15:14Z" duration-ms="35353" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '10.11.64.24', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8cd599cb724e260b8ae4b8839ce9994d, sendKeysToElement {id=9b590f6e-affe-461c-ad9d-d9d96a3c0faa, value=[Ljava.lang.CharSequence;@44cab872}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54234}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54234/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (8cd599cb724e260b8ae4b8839ce9994d)] -> xpath: //header/div[1]/nav[1]/ul[1]/li[3]/ul[1]/li[4]/form[1]/div[1]/input[1]]
Session ID: 8cd599cb724e260b8ae4b8839ce9994d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '10.11.64.24', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8cd599cb724e260b8ae4b8839ce9994d, sendKeysToElement {id=9b590f6e-affe-461c-ad9d-d9d96a3c0faa, value=[Ljava.lang.CharSequence;@44cab872}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54234}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54234/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (8cd599cb724e260b8ae4b8839ce9994d)] -> xpath: //header/div[1]/nav[1]/ul[1]/li[3]/ul[1]/li[4]/form[1]/div[1]/input[1]]
Session ID: 8cd599cb724e260b8ae4b8839ce9994d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:107)
at jdk.internal.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.sendKeys(Unknown Source)
at base.CommonAPI.typeAndEnter(CommonAPI.java:225)
at saucedemopages.SauceLabsPage.typeAndEnterSearchBar(SauceLabsPage.java:100)
at saucedemotests.SearchBar.searchAndRedirectBackToHomeTest(SearchBar.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAndRedirectBackToHomeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:14Z" name="afterEachTestMethod" finished-at="2022-06-18T16:15:15Z" duration-ms="1664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAndRedirectBackToHomeTest status=FAILURE method=SearchBar.searchAndRedirectBackToHomeTest()[pri:0, instance:saucedemotests.SearchBar@a8ef162] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:15Z" name="tearDown" finished-at="2022-06-18T16:15:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:15Z" name="setUp" finished-at="2022-06-18T16:15:19Z" duration-ms="3868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchDogsTest()[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:19Z" name="searchDogsTest" finished-at="2022-06-18T16:15:55Z" duration-ms="35487" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '10.11.64.24', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3942f52e81b05bcc8b088086ede2ea28, sendKeysToElement {id=6309412b-9c7f-4428-ac7b-3f0140dbee61, value=[Ljava.lang.CharSequence;@7325b786}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54436}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54436/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3942f52e81b05bcc8b088086ede2ea28)] -> xpath: //header/div[1]/nav[1]/ul[1]/li[3]/ul[1]/li[4]/form[1]/div[1]/input[1]]
Session ID: 3942f52e81b05bcc8b088086ede2ea28]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '10.11.64.24', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3942f52e81b05bcc8b088086ede2ea28, sendKeysToElement {id=6309412b-9c7f-4428-ac7b-3f0140dbee61, value=[Ljava.lang.CharSequence;@7325b786}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54436}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54436/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3942f52e81b05bcc8b088086ede2ea28)] -> xpath: //header/div[1]/nav[1]/ul[1]/li[3]/ul[1]/li[4]/form[1]/div[1]/input[1]]
Session ID: 3942f52e81b05bcc8b088086ede2ea28
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:107)
at jdk.internal.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.sendKeys(Unknown Source)
at base.CommonAPI.typeAndEnter(CommonAPI.java:225)
at saucedemopages.SauceLabsPage.typeAndEnterSearchBar(SauceLabsPage.java:100)
at saucedemotests.SearchBar.searchDogsTest(SearchBar.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchDogsTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:19Z" name="startExtent" finished-at="2022-06-18T16:15:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.SearchBar.searchDogsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:55Z" name="afterEachTestMethod" finished-at="2022-06-18T16:15:56Z" duration-ms="1490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchDogsTest status=FAILURE method=SearchBar.searchDogsTest()[pri:0, instance:saucedemotests.SearchBar@a8ef162] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.SearchBar@a8ef162]" started-at="2022-06-18T16:15:56Z" name="tearDown" finished-at="2022-06-18T16:15:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.SearchBar -->
      <class name="saucedemotests.ResetAddToCart">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:02Z" name="setUp" finished-at="2022-06-18T16:14:05Z" duration-ms="3377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resetAddToCartTest()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:05Z" name="resetAddToCartTest" finished-at="2022-06-18T16:14:18Z" duration-ms="12375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetAddToCartTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:05Z" name="startExtent" finished-at="2022-06-18T16:14:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ResetAddToCart.resetAddToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:18Z" name="afterEachTestMethod" finished-at="2022-06-18T16:14:19Z" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetAddToCartTest status=SUCCESS method=ResetAddToCart.resetAddToCartTest()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:19Z" name="tearDown" finished-at="2022-06-18T16:14:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:19Z" name="setUp" finished-at="2022-06-18T16:14:22Z" duration-ms="3095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:22Z" name="startExtent" finished-at="2022-06-18T16:14:22Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ResetAddToCart.resetMultipleItemsAddToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetMultipleItemsAddToCartTest()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:22Z" name="resetMultipleItemsAddToCartTest" finished-at="2022-06-18T16:14:34Z" duration-ms="12530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetMultipleItemsAddToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:34Z" name="afterEachTestMethod" finished-at="2022-06-18T16:14:35Z" duration-ms="1042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetMultipleItemsAddToCartTest status=SUCCESS method=ResetAddToCart.resetMultipleItemsAddToCartTest()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ResetAddToCart@41488b16]" started-at="2022-06-18T16:14:35Z" name="tearDown" finished-at="2022-06-18T16:14:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.ResetAddToCart -->
      <class name="saucedemotests.DropDown">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:09Z" name="setUp" finished-at="2022-06-18T16:10:12Z" duration-ms="3347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:12Z" name="startExtent" finished-at="2022-06-18T16:10:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownAtoZTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownAtoZTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:12Z" name="dragDownAtoZTest" finished-at="2022-06-18T16:10:14Z" duration-ms="1085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownAtoZTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:14Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:15Z" duration-ms="1425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownAtoZTest status=SUCCESS method=DropDown.dragDownAtoZTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:15Z" name="tearDown" finished-at="2022-06-18T16:10:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:15Z" name="setUp" finished-at="2022-06-18T16:10:18Z" duration-ms="2807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:18Z" name="startExtent" finished-at="2022-06-18T16:10:18Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownHightoLowTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownHightoLowTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:18Z" name="dragDownHightoLowTest" finished-at="2022-06-18T16:10:19Z" duration-ms="1030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownHightoLowTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:19Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:20Z" duration-ms="1510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownHightoLowTest status=SUCCESS method=DropDown.dragDownHightoLowTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:20Z" name="setUp" finished-at="2022-06-18T16:10:23Z" duration-ms="2661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:20Z" name="tearDown" finished-at="2022-06-18T16:10:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:23Z" name="startExtent" finished-at="2022-06-18T16:10:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownLowtoHighTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownLowtoHighTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:23Z" name="dragDownLowtoHighTest" finished-at="2022-06-18T16:10:24Z" duration-ms="1090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownLowtoHighTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:24Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:26Z" duration-ms="1429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownLowtoHighTest status=SUCCESS method=DropDown.dragDownLowtoHighTest()[pri:0, instance:saucedemotests.DropDown@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:26Z" name="setUp" finished-at="2022-06-18T16:10:28Z" duration-ms="2839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:26Z" name="tearDown" finished-at="2022-06-18T16:10:26Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:28Z" name="startExtent" finished-at="2022-06-18T16:10:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownZtoATest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownZtoATest()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:28Z" name="dragDownZtoATest" finished-at="2022-06-18T16:10:29Z" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownZtoATest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:29Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:31Z" duration-ms="1304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownZtoATest status=SUCCESS method=DropDown.dragDownZtoATest()[pri:0, instance:saucedemotests.DropDown@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@2bdd8394]" started-at="2022-06-18T16:10:31Z" name="tearDown" finished-at="2022-06-18T16:10:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.DropDown -->
      <class name="saucedemotests.CheckOut">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:42Z" name="setUp" finished-at="2022-06-18T16:09:44Z" duration-ms="2642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:44Z" name="startExtent" finished-at="2022-06-18T16:09:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.CheckOut.mulipleItemsCheckOutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="mulipleItemsCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:44Z" name="mulipleItemsCheckOutTest" finished-at="2022-06-18T16:09:47Z" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulipleItemsCheckOutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:47Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:48Z" duration-ms="1125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mulipleItemsCheckOutTest status=SUCCESS method=CheckOut.mulipleItemsCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@74287ea3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:48Z" name="tearDown" finished-at="2022-06-18T16:09:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:48Z" name="setUp" finished-at="2022-06-18T16:09:50Z" duration-ms="2580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:50Z" name="startExtent" finished-at="2022-06-18T16:09:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.CheckOut.singleItemCheckOutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="singleItemCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:50Z" name="singleItemCheckOutTest" finished-at="2022-06-18T16:09:53Z" duration-ms="2312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleItemCheckOutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:53Z" name="afterEachTestMethod" finished-at="2022-06-18T16:09:54Z" duration-ms="1078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=singleItemCheckOutTest status=SUCCESS method=CheckOut.singleItemCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@74287ea3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.CheckOut@74287ea3]" started-at="2022-06-18T16:09:54Z" name="tearDown" finished-at="2022-06-18T16:09:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.CheckOut -->
      <class name="saucedemotests.HoverOver">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:31Z" name="setUp" finished-at="2022-06-18T16:10:33Z" duration-ms="2649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:33Z" name="startExtent" finished-at="2022-06-18T16:10:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverCompanyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverCompanyTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:33Z" name="hoverOverCompanyTest" finished-at="2022-06-18T16:10:42Z" duration-ms="8807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverCompanyTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:42Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:44Z" duration-ms="1548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverCompanyTest status=SUCCESS method=HoverOver.hoverOverCompanyTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:44Z" name="tearDown" finished-at="2022-06-18T16:10:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:44Z" name="setUp" finished-at="2022-06-18T16:10:46Z" duration-ms="2576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:46Z" name="startExtent" finished-at="2022-06-18T16:10:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverCrossBrowserTestingAndClickTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverCrossBrowserTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:46Z" name="hoverOverCrossBrowserTestingAndClickTest" finished-at="2022-06-18T16:10:58Z" duration-ms="11153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverCrossBrowserTestingAndClickTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:58Z" name="afterEachTestMethod" finished-at="2022-06-18T16:10:59Z" duration-ms="1284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverCrossBrowserTestingAndClickTest status=SUCCESS method=HoverOver.hoverOverCrossBrowserTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:59Z" name="tearDown" finished-at="2022-06-18T16:10:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:10:59Z" name="setUp" finished-at="2022-06-18T16:11:01Z" duration-ms="2570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:01Z" name="startExtent" finished-at="2022-06-18T16:11:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverLowCodeTestingAndClickTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverLowCodeTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:01Z" name="hoverOverLowCodeTestingAndClickTest" finished-at="2022-06-18T16:11:13Z" duration-ms="11165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverLowCodeTestingAndClickTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:13Z" name="afterEachTestMethod" finished-at="2022-06-18T16:11:14Z" duration-ms="1298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverLowCodeTestingAndClickTest status=SUCCESS method=HoverOver.hoverOverLowCodeTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:14Z" name="tearDown" finished-at="2022-06-18T16:11:14Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:14Z" name="setUp" finished-at="2022-06-18T16:11:17Z" duration-ms="3294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:17Z" name="startExtent" finished-at="2022-06-18T16:11:17Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverMobileTestingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverMobileTestingTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:17Z" name="hoverOverMobileTestingTest" finished-at="2022-06-18T16:11:29Z" duration-ms="11504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverMobileTestingTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:29Z" name="afterEachTestMethod" finished-at="2022-06-18T16:11:30Z" duration-ms="1160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverMobileTestingTest status=SUCCESS method=HoverOver.hoverOverMobileTestingTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:30Z" name="tearDown" finished-at="2022-06-18T16:11:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:30Z" name="setUp" finished-at="2022-06-18T16:11:33Z" duration-ms="3238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:33Z" name="startExtent" finished-at="2022-06-18T16:11:33Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverPlatformTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverPlatformTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:33Z" name="hoverOverPlatformTest" finished-at="2022-06-18T16:11:42Z" duration-ms="9368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverPlatformTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:42Z" name="afterEachTestMethod" finished-at="2022-06-18T16:11:44Z" duration-ms="1193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverPlatformTest status=SUCCESS method=HoverOver.hoverOverPlatformTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:44Z" name="tearDown" finished-at="2022-06-18T16:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:44Z" name="setUp" finished-at="2022-06-18T16:11:47Z" duration-ms="2986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:47Z" name="startExtent" finished-at="2022-06-18T16:11:47Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverPricingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverPricingTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:47Z" name="hoverOverPricingTest" finished-at="2022-06-18T16:11:58Z" duration-ms="11459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverPricingTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:58Z" name="afterEachTestMethod" finished-at="2022-06-18T16:11:59Z" duration-ms="1166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverPricingTest status=SUCCESS method=HoverOver.hoverOverPricingTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:59Z" name="tearDown" finished-at="2022-06-18T16:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:11:59Z" name="setUp" finished-at="2022-06-18T16:12:01Z" duration-ms="2247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hoverOverResourcesTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:01Z" name="hoverOverResourcesTest" finished-at="2022-06-18T16:12:10Z" duration-ms="8066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverResourcesTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:01Z" name="startExtent" finished-at="2022-06-18T16:12:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverResourcesTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:10Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:11Z" duration-ms="957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverResourcesTest status=SUCCESS method=HoverOver.hoverOverResourcesTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:11Z" name="tearDown" finished-at="2022-06-18T16:12:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:11Z" name="setUp" finished-at="2022-06-18T16:12:12Z" duration-ms="1935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:12Z" name="startExtent" finished-at="2022-06-18T16:12:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverSolutionsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverSolutionsTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:12Z" name="hoverOverSolutionsTest" finished-at="2022-06-18T16:12:20Z" duration-ms="7352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverSolutionsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:20Z" name="afterEachTestMethod" finished-at="2022-06-18T16:12:21Z" duration-ms="896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverSolutionsTest status=SUCCESS method=HoverOver.hoverOverSolutionsTest()[pri:0, instance:saucedemotests.HoverOver@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@5f9edf14]" started-at="2022-06-18T16:12:21Z" name="tearDown" finished-at="2022-06-18T16:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.HoverOver -->
    </test> <!-- com.SauceDemo Tests -->
    <test started-at="2022-06-18T16:15:56Z" name="com.GlobalSQA Tests" finished-at="2022-06-18T16:20:06Z" duration-ms="249793">
      <class name="globalsqatests.DeleteButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.DeleteButton@5e17553a]" started-at="2022-06-18T16:16:00Z" name="setUp" finished-at="2022-06-18T16:16:03Z" duration-ms="2737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.DeleteButton@5e17553a]" started-at="2022-06-18T16:16:03Z" name="startExtent" finished-at="2022-06-18T16:16:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.DeleteButton.deleteCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@5e17553a]" started-at="2022-06-18T16:16:03Z" name="deleteCustomerTest" finished-at="2022-06-18T16:16:04Z" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomerTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.DeleteButton@5e17553a]" started-at="2022-06-18T16:16:04Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:05Z" duration-ms="1254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteCustomerTest status=SUCCESS method=DeleteButton.deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@5e17553a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.DeleteButton@5e17553a]" started-at="2022-06-18T16:16:05Z" name="tearDown" finished-at="2022-06-18T16:16:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.DeleteButton -->
      <class name="globalsqatests.AddCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:07Z" name="setUp" finished-at="2022-06-18T16:17:10Z" duration-ms="3387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:10Z" name="startExtent" finished-at="2022-06-18T16:17:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerFaieqLaskarTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addCustomerFaieqLaskarTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:10Z" name="addCustomerFaieqLaskarTest" finished-at="2022-06-18T16:17:12Z" duration-ms="1552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerFaieqLaskarTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:12Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:13Z" duration-ms="1537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerFaieqLaskarTest status=SUCCESS method=AddCustomer.addCustomerFaieqLaskarTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:13Z" name="tearDown" finished-at="2022-06-18T16:17:13Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:13Z" name="setUp" finished-at="2022-06-18T16:17:16Z" duration-ms="2824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:16Z" name="startExtent" finished-at="2022-06-18T16:17:16Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerJohnDoeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addCustomerJohnDoeTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:16Z" name="addCustomerJohnDoeTest" finished-at="2022-06-18T16:17:18Z" duration-ms="1498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerJohnDoeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:18Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:19Z" duration-ms="1108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerJohnDoeTest status=SUCCESS method=AddCustomer.addCustomerJohnDoeTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:19Z" name="tearDown" finished-at="2022-06-18T16:17:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:19Z" name="setUp" finished-at="2022-06-18T16:17:22Z" duration-ms="2773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addCustomerPollakRahmanTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:22Z" name="addCustomerPollakRahmanTest" finished-at="2022-06-18T16:17:23Z" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerPollakRahmanTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:22Z" name="startExtent" finished-at="2022-06-18T16:17:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerPollakRahmanTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:23Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:24Z" duration-ms="1252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerPollakRahmanTest status=SUCCESS method=AddCustomer.addCustomerPollakRahmanTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:24Z" name="tearDown" finished-at="2022-06-18T16:17:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:24Z" name="setUp" finished-at="2022-06-18T16:17:27Z" duration-ms="2589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addMultipleCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:27Z" name="addMultipleCustomerTest" finished-at="2022-06-18T16:17:29Z" duration-ms="1854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleCustomerTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:27Z" name="startExtent" finished-at="2022-06-18T16:17:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addMultipleCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:29Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:30Z" duration-ms="1127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleCustomerTest status=SUCCESS method=AddCustomer.addMultipleCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@34b9f960] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@34b9f960]" started-at="2022-06-18T16:17:30Z" name="tearDown" finished-at="2022-06-18T16:17:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AddCustomer -->
      <class name="globalsqatests.CustomerDropDown">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:09:01Z" name="extentSetup" finished-at="2022-06-18T16:09:02Z" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16023bb2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:15:56Z" name="setUp" finished-at="2022-06-18T16:15:59Z" duration-ms="2562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CustomerDropDownOptionsVisibilityTest()[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:15:59Z" name="CustomerDropDownOptionsVisibilityTest" finished-at="2022-06-18T16:16:00Z" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerDropDownOptionsVisibilityTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:15:59Z" name="startExtent" finished-at="2022-06-18T16:15:59Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.CustomerDropDown.CustomerDropDownOptionsVisibilityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:16:00Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:00Z" duration-ms="894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerDropDownOptionsVisibilityTest status=SUCCESS method=CustomerDropDown.CustomerDropDownOptionsVisibilityTest()[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:16:00Z" name="tearDown" finished-at="2022-06-18T16:16:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:globalsqatests.CustomerDropDown@3b5fad2d]" started-at="2022-06-18T16:20:06Z" name="generateReport" finished-at="2022-06-18T16:20:06Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- globalsqatests.CustomerDropDown -->
      <class name="globalsqatests.SearchCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:50Z" name="setUp" finished-at="2022-06-18T16:16:53Z" duration-ms="3137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:53Z" name="startExtent" finished-at="2022-06-18T16:16:53Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchHarryPotterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchHarryPotterTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:53Z" name="searchHarryPotterTest" finished-at="2022-06-18T16:16:54Z" duration-ms="1310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHarryPotterTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:54Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:56Z" duration-ms="2041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchHarryPotterTest status=SUCCESS method=SearchCustomer.searchHarryPotterTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:56Z" name="tearDown" finished-at="2022-06-18T16:16:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:56Z" name="setUp" finished-at="2022-06-18T16:16:59Z" duration-ms="3094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:59Z" name="startExtent" finished-at="2022-06-18T16:16:59Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchHermoineGrangerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchHermoineGrangerTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:16:59Z" name="searchHermoineGrangerTest" finished-at="2022-06-18T16:17:00Z" duration-ms="1050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHermoineGrangerTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:00Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:02Z" duration-ms="1486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchHermoineGrangerTest status=SUCCESS method=SearchCustomer.searchHermoineGrangerTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:02Z" name="tearDown" finished-at="2022-06-18T16:17:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:02Z" name="setUp" finished-at="2022-06-18T16:17:05Z" duration-ms="2742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:05Z" name="startExtent" finished-at="2022-06-18T16:17:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchNevilleLongbottomTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchNevilleLongbottomTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:05Z" name="searchNevilleLongbottomTest" finished-at="2022-06-18T16:17:06Z" duration-ms="1011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNevilleLongbottomTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:06Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:07Z" duration-ms="1308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchNevilleLongbottomTest status=SUCCESS method=SearchCustomer.searchNevilleLongbottomTest()[pri:0, instance:globalsqatests.SearchCustomer@27912e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@27912e3]" started-at="2022-06-18T16:17:07Z" name="tearDown" finished-at="2022-06-18T16:17:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.SearchCustomer -->
      <class name="globalsqatests.OpenAccount">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:03Z" name="setUp" finished-at="2022-06-18T16:18:06Z" duration-ms="2756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:06Z" name="startExtent" finished-at="2022-06-18T16:18:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openDollarAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="openDollarAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:06Z" name="openDollarAccountTest" finished-at="2022-06-18T16:18:07Z" duration-ms="1244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDollarAccountTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:07Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:08Z" duration-ms="1173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDollarAccountTest status=SUCCESS method=OpenAccount.openDollarAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:08Z" name="tearDown" finished-at="2022-06-18T16:18:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:08Z" name="setUp" finished-at="2022-06-18T16:18:11Z" duration-ms="2795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="openPoundAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:11Z" name="openPoundAccountTest" finished-at="2022-06-18T16:18:12Z" duration-ms="1281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPoundAccountTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:11Z" name="startExtent" finished-at="2022-06-18T16:18:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openPoundAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:12Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:14Z" duration-ms="1259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openPoundAccountTest status=SUCCESS method=OpenAccount.openPoundAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:14Z" name="tearDown" finished-at="2022-06-18T16:18:14Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:14Z" name="setUp" finished-at="2022-06-18T16:18:16Z" duration-ms="2756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="openRupeeAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:16Z" name="openRupeeAccountTest" finished-at="2022-06-18T16:18:18Z" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openRupeeAccountTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:16Z" name="startExtent" finished-at="2022-06-18T16:18:16Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openRupeeAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:18Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:19Z" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openRupeeAccountTest status=SUCCESS method=OpenAccount.openRupeeAccountTest()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@4bbf6d0e]" started-at="2022-06-18T16:18:19Z" name="tearDown" finished-at="2022-06-18T16:18:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.OpenAccount -->
      <class name="globalsqatests.HomeButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:41Z" name="setUp" finished-at="2022-06-18T16:19:45Z" duration-ms="4008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:45Z" name="startExtent" finished-at="2022-06-18T16:19:45Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:45Z" name="bankManagerHomeButtonTest" finished-at="2022-06-18T16:19:45Z" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:45Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:47Z" duration-ms="1111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerHomeButtonTest status=SUCCESS method=HomeButton.bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@2415fc55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:47Z" name="tearDown" finished-at="2022-06-18T16:19:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:47Z" name="setUp" finished-at="2022-06-18T16:19:50Z" duration-ms="3237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:50Z" name="startExtent" finished-at="2022-06-18T16:19:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.customerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:50Z" name="customerHomeButtonTest" finished-at="2022-06-18T16:19:51Z" duration-ms="1065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:51Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:52Z" duration-ms="1111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerHomeButtonTest status=SUCCESS method=HomeButton.customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@2415fc55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@2415fc55]" started-at="2022-06-18T16:19:52Z" name="tearDown" finished-at="2022-06-18T16:19:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.HomeButton -->
      <class name="globalsqatests.Deposit">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:41Z" name="setUp" finished-at="2022-06-18T16:17:43Z" duration-ms="2825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:43Z" name="startExtent" finished-at="2022-06-18T16:17:43Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositAmount1000Test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositAmount1000Test()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:43Z" name="depositAmount1000Test" finished-at="2022-06-18T16:17:45Z" duration-ms="1630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAmount1000Test -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:45Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:46Z" duration-ms="1238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositAmount1000Test status=SUCCESS method=Deposit.depositAmount1000Test()[pri:0, instance:globalsqatests.Deposit@19b89d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:46Z" name="tearDown" finished-at="2022-06-18T16:17:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:46Z" name="setUp" finished-at="2022-06-18T16:17:49Z" duration-ms="2616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:49Z" name="startExtent" finished-at="2022-06-18T16:17:49Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositAmount30000Test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositAmount30000Test()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:49Z" name="depositAmount30000Test" finished-at="2022-06-18T16:17:51Z" duration-ms="1577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAmount30000Test -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:51Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:51Z" duration-ms="879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositAmount30000Test status=SUCCESS method=Deposit.depositAmount30000Test()[pri:0, instance:globalsqatests.Deposit@19b89d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:51Z" name="tearDown" finished-at="2022-06-18T16:17:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:51Z" name="setUp" finished-at="2022-06-18T16:17:55Z" duration-ms="3446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:55Z" name="startExtent" finished-at="2022-06-18T16:17:55Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositAmount5Test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositAmount5Test()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:55Z" name="depositAmount5Test" finished-at="2022-06-18T16:17:57Z" duration-ms="1675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAmount5Test -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:57Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:57Z" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositAmount5Test status=SUCCESS method=Deposit.depositAmount5Test()[pri:0, instance:globalsqatests.Deposit@19b89d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:57Z" name="tearDown" finished-at="2022-06-18T16:17:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:17:57Z" name="setUp" finished-at="2022-06-18T16:18:01Z" duration-ms="3211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:18:01Z" name="startExtent" finished-at="2022-06-18T16:18:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositFunctionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositFunctionTest()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:18:01Z" name="depositFunctionTest" finished-at="2022-06-18T16:18:02Z" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositFunctionTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:18:02Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:03Z" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositFunctionTest status=SUCCESS method=Deposit.depositFunctionTest()[pri:0, instance:globalsqatests.Deposit@19b89d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@19b89d4]" started-at="2022-06-18T16:18:03Z" name="tearDown" finished-at="2022-06-18T16:18:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.Deposit -->
      <class name="globalsqatests.BackButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:11Z" name="setUp" finished-at="2022-06-18T16:16:13Z" duration-ms="2620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:13Z" name="startExtent" finished-at="2022-06-18T16:16:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.harryPotterBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:13Z" name="harryPotterBackButtonTest" finished-at="2022-06-18T16:16:15Z" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterBackButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:15Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:16Z" duration-ms="1136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterBackButtonTest status=SUCCESS method=BackButton.harryPotterBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:16Z" name="tearDown" finished-at="2022-06-18T16:16:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:16Z" name="setUp" finished-at="2022-06-18T16:16:19Z" duration-ms="2908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hermoineGrangerBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:19Z" name="hermoineGrangerBackButtonTest" finished-at="2022-06-18T16:16:21Z" duration-ms="1696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerBackButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:19Z" name="startExtent" finished-at="2022-06-18T16:16:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.hermoineGrangerBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:21Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:22Z" duration-ms="1016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerBackButtonTest status=SUCCESS method=BackButton.hermoineGrangerBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:22Z" name="tearDown" finished-at="2022-06-18T16:16:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:22Z" name="setUp" finished-at="2022-06-18T16:16:24Z" duration-ms="2713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:24Z" name="startExtent" finished-at="2022-06-18T16:16:24Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.nevilleLongbottomBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="nevilleLongbottomBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:24Z" name="nevilleLongbottomBackButtonTest" finished-at="2022-06-18T16:16:26Z" duration-ms="1481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nevilleLongbottomBackButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:26Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:27Z" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nevilleLongbottomBackButtonTest status=SUCCESS method=BackButton.nevilleLongbottomBackButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:27Z" name="tearDown" finished-at="2022-06-18T16:16:27Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:27Z" name="setUp" finished-at="2022-06-18T16:16:30Z" duration-ms="3305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:30Z" name="startExtent" finished-at="2022-06-18T16:16:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.ronWeaslyButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:30Z" name="ronWeaslyButtonTest" finished-at="2022-06-18T16:16:32Z" duration-ms="1671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:32Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:33Z" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyButtonTest status=SUCCESS method=BackButton.ronWeaslyButtonTest()[pri:0, instance:globalsqatests.BackButton@56dc1551] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@56dc1551]" started-at="2022-06-18T16:16:33Z" name="tearDown" finished-at="2022-06-18T16:16:33Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.BackButton -->
      <class name="globalsqatests.CustomerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4]" started-at="2022-06-18T16:19:52Z" name="setUp" finished-at="2022-06-18T16:19:55Z" duration-ms="2743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4]" started-at="2022-06-18T16:19:55Z" name="startExtent" finished-at="2022-06-18T16:19:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.CustomerLoginButton.customerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4]" started-at="2022-06-18T16:19:55Z" name="customerLoginButtonTest" finished-at="2022-06-18T16:19:58Z" duration-ms="3326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerLoginButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4]" started-at="2022-06-18T16:19:58Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:59Z" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerLoginButtonTest status=SUCCESS method=CustomerLoginButton.customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.CustomerLoginButton@14f232c4]" started-at="2022-06-18T16:19:59Z" name="tearDown" finished-at="2022-06-18T16:19:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.CustomerLoginButton -->
      <class name="globalsqatests.ResetButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.ResetButton@3eb91815]" started-at="2022-06-18T16:16:05Z" name="setUp" finished-at="2022-06-18T16:16:08Z" duration-ms="2782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.ResetButton@3eb91815]" started-at="2022-06-18T16:16:08Z" name="startExtent" finished-at="2022-06-18T16:16:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.ResetButton.resetButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@3eb91815]" started-at="2022-06-18T16:16:08Z" name="resetButtonTest" finished-at="2022-06-18T16:16:10Z" duration-ms="1768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.ResetButton@3eb91815]" started-at="2022-06-18T16:16:10Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:11Z" duration-ms="886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetButtonTest status=SUCCESS method=ResetButton.resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@3eb91815] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.ResetButton@3eb91815]" started-at="2022-06-18T16:16:11Z" name="tearDown" finished-at="2022-06-18T16:16:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.ResetButton -->
      <class name="globalsqatests.AccountNumberDropDown">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:33Z" name="setUp" finished-at="2022-06-18T16:16:36Z" duration-ms="2948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:36Z" name="startExtent" finished-at="2022-06-18T16:16:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumberDropDown.selectAccountNumberTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:36Z" name="selectAccountNumberTest" finished-at="2022-06-18T16:16:37Z" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountNumberTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:37Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:38Z" duration-ms="1143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountNumberTest status=SUCCESS method=AccountNumberDropDown.selectAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:38Z" name="tearDown" finished-at="2022-06-18T16:16:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:38Z" name="setUp" finished-at="2022-06-18T16:16:41Z" duration-ms="2939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:41Z" name="startExtent" finished-at="2022-06-18T16:16:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumberDropDown.selectMultipleAccountNumbersTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectMultipleAccountNumbersTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:41Z" name="selectMultipleAccountNumbersTest" finished-at="2022-06-18T16:16:43Z" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountNumbersTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:43Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:44Z" duration-ms="1008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountNumbersTest status=SUCCESS method=AccountNumberDropDown.selectMultipleAccountNumbersTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumberDropDown@102cec62]" started-at="2022-06-18T16:16:44Z" name="tearDown" finished-at="2022-06-18T16:16:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AccountNumberDropDown -->
      <class name="globalsqatests.BankManagerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645]" started-at="2022-06-18T16:19:59Z" name="setUp" finished-at="2022-06-18T16:20:02Z" duration-ms="2644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645]" started-at="2022-06-18T16:20:02Z" name="startExtent" finished-at="2022-06-18T16:20:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BankManagerLoginButton.bankManagerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645]" started-at="2022-06-18T16:20:02Z" name="bankManagerLoginButtonTest" finished-at="2022-06-18T16:20:05Z" duration-ms="3357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerLoginButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645]" started-at="2022-06-18T16:20:05Z" name="afterEachTestMethod" finished-at="2022-06-18T16:20:06Z" duration-ms="1141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerLoginButtonTest status=SUCCESS method=BankManagerLoginButton.bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BankManagerLoginButton@13bc8645]" started-at="2022-06-18T16:20:06Z" name="tearDown" finished-at="2022-06-18T16:20:06Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.BankManagerLoginButton -->
      <class name="globalsqatests.TransactionsButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8]" started-at="2022-06-18T16:16:44Z" name="setUp" finished-at="2022-06-18T16:16:47Z" duration-ms="2812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8]" started-at="2022-06-18T16:16:47Z" name="startExtent" finished-at="2022-06-18T16:16:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.transactionsButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="transactionsButton()[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8]" started-at="2022-06-18T16:16:47Z" name="transactionsButton" finished-at="2022-06-18T16:16:48Z" duration-ms="1537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8]" started-at="2022-06-18T16:16:48Z" name="afterEachTestMethod" finished-at="2022-06-18T16:16:50Z" duration-ms="1359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsButton status=SUCCESS method=TransactionsButton.transactionsButton()[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@74f6c5d8]" started-at="2022-06-18T16:16:50Z" name="tearDown" finished-at="2022-06-18T16:16:50Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.TransactionsButton -->
      <class name="globalsqatests.Withdraw">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:30Z" name="setUp" finished-at="2022-06-18T16:17:33Z" duration-ms="2764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:33Z" name="startExtent" finished-at="2022-06-18T16:17:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Withdraw.withdrawFunctionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="withdrawFunctionTest()[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:33Z" name="withdrawFunctionTest" finished-at="2022-06-18T16:17:34Z" duration-ms="1622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawFunctionTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:34Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:35Z" duration-ms="912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdrawFunctionTest status=SUCCESS method=Withdraw.withdrawFunctionTest()[pri:0, instance:globalsqatests.Withdraw@43015c69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:35Z" name="tearDown" finished-at="2022-06-18T16:17:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:35Z" name="setUp" finished-at="2022-06-18T16:17:38Z" duration-ms="2582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:38Z" name="startExtent" finished-at="2022-06-18T16:17:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Withdraw.withdrawNegativeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="withdrawNegativeTest()[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:38Z" name="withdrawNegativeTest" finished-at="2022-06-18T16:17:40Z" duration-ms="1711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawNegativeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:40Z" name="afterEachTestMethod" finished-at="2022-06-18T16:17:41Z" duration-ms="1005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdrawNegativeTest status=SUCCESS method=Withdraw.withdrawNegativeTest()[pri:0, instance:globalsqatests.Withdraw@43015c69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Withdraw@43015c69]" started-at="2022-06-18T16:17:41Z" name="tearDown" finished-at="2022-06-18T16:17:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.Withdraw -->
      <class name="globalsqatests.UserLogin">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:19Z" name="setUp" finished-at="2022-06-18T16:18:21Z" duration-ms="2775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="albusDumbledoreLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:21Z" name="albusDumbledoreLoginTest" finished-at="2022-06-18T16:18:22Z" duration-ms="966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- albusDumbledoreLoginTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:21Z" name="startExtent" finished-at="2022-06-18T16:18:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.albusDumbledoreLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:22Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:24Z" duration-ms="1255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=albusDumbledoreLoginTest status=SUCCESS method=UserLogin.albusDumbledoreLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:24Z" name="tearDown" finished-at="2022-06-18T16:18:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:24Z" name="setUp" finished-at="2022-06-18T16:18:27Z" duration-ms="2901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:27Z" name="startExtent" finished-at="2022-06-18T16:18:27Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.harryPotterLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:27Z" name="harryPotterLoginTest" finished-at="2022-06-18T16:18:28Z" duration-ms="1143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:28Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:29Z" duration-ms="1074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterLoginTest status=SUCCESS method=UserLogin.harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:29Z" name="tearDown" finished-at="2022-06-18T16:18:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:29Z" name="setUp" finished-at="2022-06-18T16:18:32Z" duration-ms="2955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:32Z" name="startExtent" finished-at="2022-06-18T16:18:32Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.hermoineGrangerLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hermoineGrangerLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:32Z" name="hermoineGrangerLoginTest" finished-at="2022-06-18T16:18:33Z" duration-ms="1053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:33Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:34Z" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerLoginTest status=SUCCESS method=UserLogin.hermoineGrangerLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:34Z" name="tearDown" finished-at="2022-06-18T16:18:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:34Z" name="setUp" finished-at="2022-06-18T16:18:37Z" duration-ms="3421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:37Z" name="startExtent" finished-at="2022-06-18T16:18:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.ronWeaslyLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:37Z" name="ronWeaslyLoginTest" finished-at="2022-06-18T16:18:38Z" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:38Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:40Z" duration-ms="1405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyLoginTest status=SUCCESS method=UserLogin.ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@30b6ffe0]" started-at="2022-06-18T16:18:40Z" name="tearDown" finished-at="2022-06-18T16:18:40Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.UserLogin -->
      <class name="globalsqatests.Logout">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:40Z" name="setUp" finished-at="2022-06-18T16:18:43Z" duration-ms="3291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:43Z" name="startExtent" finished-at="2022-06-18T16:18:43Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.albusDumbledoreLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="albusDumbledoreLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:43Z" name="albusDumbledoreLogoutTest" finished-at="2022-06-18T16:18:50Z" duration-ms="7115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- albusDumbledoreLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:50Z" name="afterEachTestMethod" finished-at="2022-06-18T16:18:52Z" duration-ms="2299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=albusDumbledoreLogoutTest status=SUCCESS method=Logout.albusDumbledoreLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:52Z" name="tearDown" finished-at="2022-06-18T16:18:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:52Z" name="setUp" finished-at="2022-06-18T16:18:56Z" duration-ms="3490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="harryPotterLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:56Z" name="harryPotterLogoutTest" finished-at="2022-06-18T16:19:03Z" duration-ms="6981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterLogoutTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:18:56Z" name="startExtent" finished-at="2022-06-18T16:18:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.harryPotterLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:03Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:05Z" duration-ms="1707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterLogoutTest status=SUCCESS method=Logout.harryPotterLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:05Z" name="tearDown" finished-at="2022-06-18T16:19:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:05Z" name="setUp" finished-at="2022-06-18T16:19:08Z" duration-ms="3446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:08Z" name="startExtent" finished-at="2022-06-18T16:19:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.hermoineGrangerLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hermoineGrangerLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:08Z" name="hermoineGrangerLogoutTest" finished-at="2022-06-18T16:19:15Z" duration-ms="6907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:15Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:17Z" duration-ms="1612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerLogoutTest status=SUCCESS method=Logout.hermoineGrangerLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:17Z" name="setUp" finished-at="2022-06-18T16:19:20Z" duration-ms="3406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:17Z" name="tearDown" finished-at="2022-06-18T16:19:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="nevilleLongbottomLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:20Z" name="nevilleLongbottomLogoutTest" finished-at="2022-06-18T16:19:27Z" duration-ms="6937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nevilleLongbottomLogoutTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:20Z" name="startExtent" finished-at="2022-06-18T16:19:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.nevilleLongbottomLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:27Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:28Z" duration-ms="1344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nevilleLongbottomLogoutTest status=SUCCESS method=Logout.nevilleLongbottomLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:28Z" name="tearDown" finished-at="2022-06-18T16:19:28Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:28Z" name="setUp" finished-at="2022-06-18T16:19:32Z" duration-ms="3536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:32Z" name="startExtent" finished-at="2022-06-18T16:19:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.ronWeaslyLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:32Z" name="ronWeaslyLogoutTest" finished-at="2022-06-18T16:19:39Z" duration-ms="7153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:39Z" name="afterEachTestMethod" finished-at="2022-06-18T16:19:41Z" duration-ms="1580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyLogoutTest status=SUCCESS method=Logout.ronWeaslyLogoutTest()[pri:0, instance:globalsqatests.Logout@791d1f8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@791d1f8b]" started-at="2022-06-18T16:19:41Z" name="tearDown" finished-at="2022-06-18T16:19:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.Logout -->
    </test> <!-- com.GlobalSQA Tests -->
  </suite> <!-- CRIP Automation Script -->
</testng-results>
