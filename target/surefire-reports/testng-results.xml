<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="30" total="97" passed="66" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-19T21:08:45Z" name="CRIP Automation Script" finished-at="2022-06-19T21:14:34Z" duration-ms="348131">
    <groups>
    </groups>
    <test started-at="2022-06-19T21:08:45Z" name="com.GlobalSQA Tests" finished-at="2022-06-19T21:14:34Z" duration-ms="348131">
      <class name="globalsqatests.AddCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:15Z" name="setUp" finished-at="2022-06-19T21:11:16Z" duration-ms="1779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addCustomerFaieqLaskarTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:16Z" name="addCustomerFaieqLaskarTest" finished-at="2022-06-19T21:11:17Z" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerFaieqLaskarTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:16Z" name="startExtent" finished-at="2022-06-19T21:11:16Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerFaieqLaskarTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:17Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:18Z" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerFaieqLaskarTest status=SUCCESS method=AddCustomer.addCustomerFaieqLaskarTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:18Z" name="endLOG" finished-at="2022-06-19T21:11:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:18Z" name="setUp" finished-at="2022-06-19T21:11:20Z" duration-ms="2080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:18Z" name="tearDown" finished-at="2022-06-19T21:11:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:20Z" name="startExtent" finished-at="2022-06-19T21:11:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerJohnDoeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addCustomerJohnDoeTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:20Z" name="addCustomerJohnDoeTest" finished-at="2022-06-19T21:11:21Z" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerJohnDoeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:21Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:21Z" duration-ms="660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerJohnDoeTest status=SUCCESS method=AddCustomer.addCustomerJohnDoeTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:21Z" name="endLOG" finished-at="2022-06-19T21:11:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:21Z" name="setUp" finished-at="2022-06-19T21:11:23Z" duration-ms="2066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:21Z" name="tearDown" finished-at="2022-06-19T21:11:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="addCustomerPollakRahmanTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:23Z" name="addCustomerPollakRahmanTest" finished-at="2022-06-19T21:11:24Z" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerPollakRahmanTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:23Z" name="startExtent" finished-at="2022-06-19T21:11:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerPollakRahmanTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:24Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:25Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerPollakRahmanTest status=SUCCESS method=AddCustomer.addCustomerPollakRahmanTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:25Z" name="endLOG" finished-at="2022-06-19T21:11:25Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:25Z" name="tearDown" finished-at="2022-06-19T21:11:25Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:25Z" name="setUp" finished-at="2022-06-19T21:11:27Z" duration-ms="2240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:27Z" name="startExtent" finished-at="2022-06-19T21:11:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addMultipleCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addMultipleCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:27Z" name="addMultipleCustomerTest" finished-at="2022-06-19T21:11:28Z" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleCustomerTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:28Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:29Z" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleCustomerTest status=SUCCESS method=AddCustomer.addMultipleCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:29Z" name="endLOG" finished-at="2022-06-19T21:11:29Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@1787f2a0]" started-at="2022-06-19T21:11:29Z" name="tearDown" finished-at="2022-06-19T21:11:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AddCustomer -->
      <class name="globalsqatests.DeleteButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:51Z" name="setUp" finished-at="2022-06-19T21:08:53Z" duration-ms="1910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:53Z" name="startExtent" finished-at="2022-06-19T21:08:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.DeleteButton.deleteCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:53Z" name="deleteCustomerTest" finished-at="2022-06-19T21:08:53Z" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomerTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:53Z" name="afterEachTestMethod" finished-at="2022-06-19T21:08:54Z" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteCustomerTest status=SUCCESS method=DeleteButton.deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@4808bc9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:54Z" name="endLOG" finished-at="2022-06-19T21:08:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.DeleteButton@4808bc9b]" started-at="2022-06-19T21:08:54Z" name="tearDown" finished-at="2022-06-19T21:08:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.DeleteButton -->
      <class name="globalsqatests.AccountNumber">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:13Z" name="setUp" finished-at="2022-06-19T21:09:15Z" duration-ms="1909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:15Z" name="startExtent" finished-at="2022-06-19T21:09:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.createAccountAndVerifyAccountNumberTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="createAccountAndVerifyAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:15Z" name="createAccountAndVerifyAccountNumberTest" finished-at="2022-06-19T21:09:17Z" duration-ms="1930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountAndVerifyAccountNumberTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:17Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:17Z" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAccountAndVerifyAccountNumberTest status=SUCCESS method=AccountNumber.createAccountAndVerifyAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:17Z" name="endLOG" finished-at="2022-06-19T21:09:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:17Z" name="setUp" finished-at="2022-06-19T21:09:19Z" duration-ms="1858" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:17Z" name="tearDown" finished-at="2022-06-19T21:09:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:19Z" name="startExtent" finished-at="2022-06-19T21:09:19Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectAccountNumberTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:19Z" name="selectAccountNumberTest" finished-at="2022-06-19T21:09:20Z" duration-ms="781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountNumberTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:20Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:21Z" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountNumberTest status=SUCCESS method=AccountNumber.selectAccountNumberTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:21Z" name="endLOG" finished-at="2022-06-19T21:09:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:21Z" name="setUp" finished-at="2022-06-19T21:09:23Z" duration-ms="2252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:21Z" name="tearDown" finished-at="2022-06-19T21:09:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:23Z" name="startExtent" finished-at="2022-06-19T21:09:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectMultipleAccountsForAlbusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectMultipleAccountsForAlbusTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:23Z" name="selectMultipleAccountsForAlbusTest" finished-at="2022-06-19T21:09:24Z" duration-ms="991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountsForAlbusTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:24Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:25Z" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountsForAlbusTest status=SUCCESS method=AccountNumber.selectMultipleAccountsForAlbusTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:25Z" name="endLOG" finished-at="2022-06-19T21:09:25Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:25Z" name="tearDown" finished-at="2022-06-19T21:09:25Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:25Z" name="setUp" finished-at="2022-06-19T21:09:27Z" duration-ms="2634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="selectMultipleAccountsForHarryTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:27Z" name="selectMultipleAccountsForHarryTest" finished-at="2022-06-19T21:09:28Z" duration-ms="980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountsForHarryTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:27Z" name="startExtent" finished-at="2022-06-19T21:09:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectMultipleAccountsForHarryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:28Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:29Z" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountsForHarryTest status=SUCCESS method=AccountNumber.selectMultipleAccountsForHarryTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:29Z" name="endLOG" finished-at="2022-06-19T21:09:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:29Z" name="tearDown" finished-at="2022-06-19T21:09:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:29Z" name="setUp" finished-at="2022-06-19T21:09:31Z" duration-ms="1819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:31Z" name="startExtent" finished-at="2022-06-19T21:09:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectMultipleAccountsForHermoineTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectMultipleAccountsForHermoineTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:31Z" name="selectMultipleAccountsForHermoineTest" finished-at="2022-06-19T21:09:32Z" duration-ms="915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountsForHermoineTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:32Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:32Z" duration-ms="659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountsForHermoineTest status=SUCCESS method=AccountNumber.selectMultipleAccountsForHermoineTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:32Z" name="endLOG" finished-at="2022-06-19T21:09:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:32Z" name="tearDown" finished-at="2022-06-19T21:09:32Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:32Z" name="setUp" finished-at="2022-06-19T21:09:34Z" duration-ms="2178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:34Z" name="startExtent" finished-at="2022-06-19T21:09:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectMultipleAccountsForNevilleTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectMultipleAccountsForNevilleTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:34Z" name="selectMultipleAccountsForNevilleTest" finished-at="2022-06-19T21:09:36Z" duration-ms="1099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountsForNevilleTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:36Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:36Z" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountsForNevilleTest status=SUCCESS method=AccountNumber.selectMultipleAccountsForNevilleTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:36Z" name="endLOG" finished-at="2022-06-19T21:09:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:36Z" name="setUp" finished-at="2022-06-19T21:09:39Z" duration-ms="2358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:36Z" name="tearDown" finished-at="2022-06-19T21:09:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:39Z" name="startExtent" finished-at="2022-06-19T21:09:39Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumber.selectMultipleAccountsForRonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="selectMultipleAccountsForRonTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:39Z" name="selectMultipleAccountsForRonTest" finished-at="2022-06-19T21:09:40Z" duration-ms="991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMultipleAccountsForRonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:40Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:40Z" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMultipleAccountsForRonTest status=SUCCESS method=AccountNumber.selectMultipleAccountsForRonTest()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:40Z" name="endLOG" finished-at="2022-06-19T21:09:40Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumber@13df2a8c]" started-at="2022-06-19T21:09:40Z" name="tearDown" finished-at="2022-06-19T21:09:40Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AccountNumber -->
      <class name="globalsqatests.SearchCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:53Z" name="setUp" finished-at="2022-06-19T21:10:55Z" duration-ms="1934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createAnAccountAndSearchRownakTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:55Z" name="createAnAccountAndSearchRownakTest" finished-at="2022-06-19T21:10:56Z" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndSearchRownakTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:55Z" name="startExtent" finished-at="2022-06-19T21:10:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.createAnAccountAndSearchRownakTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:56Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:57Z" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndSearchRownakTest status=SUCCESS method=SearchCustomer.createAnAccountAndSearchRownakTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:57Z" name="tearDown" finished-at="2022-06-19T21:10:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:57Z" name="endLOG" finished-at="2022-06-19T21:10:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:57Z" name="setUp" finished-at="2022-06-19T21:10:59Z" duration-ms="2400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:59Z" name="startExtent" finished-at="2022-06-19T21:10:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchAlbusDumbledoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchAlbusDumbledoreTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:10:59Z" name="searchAlbusDumbledoreTest" finished-at="2022-06-19T21:11:00Z" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAlbusDumbledoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:00Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:01Z" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAlbusDumbledoreTest status=SUCCESS method=SearchCustomer.searchAlbusDumbledoreTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:01Z" name="tearDown" finished-at="2022-06-19T21:11:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:01Z" name="endLOG" finished-at="2022-06-19T21:11:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:01Z" name="setUp" finished-at="2022-06-19T21:11:03Z" duration-ms="1889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:03Z" name="startExtent" finished-at="2022-06-19T21:11:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchHarryPotterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchHarryPotterTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:03Z" name="searchHarryPotterTest" finished-at="2022-06-19T21:11:03Z" duration-ms="743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHarryPotterTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:03Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:04Z" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchHarryPotterTest status=SUCCESS method=SearchCustomer.searchHarryPotterTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:04Z" name="tearDown" finished-at="2022-06-19T21:11:04Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:04Z" name="endLOG" finished-at="2022-06-19T21:11:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:04Z" name="setUp" finished-at="2022-06-19T21:11:06Z" duration-ms="2015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchHermoineGrangerTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:06Z" name="searchHermoineGrangerTest" finished-at="2022-06-19T21:11:07Z" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHermoineGrangerTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:06Z" name="startExtent" finished-at="2022-06-19T21:11:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchHermoineGrangerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:07Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:08Z" duration-ms="670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchHermoineGrangerTest status=SUCCESS method=SearchCustomer.searchHermoineGrangerTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:08Z" name="tearDown" finished-at="2022-06-19T21:11:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:08Z" name="endLOG" finished-at="2022-06-19T21:11:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:08Z" name="setUp" finished-at="2022-06-19T21:11:10Z" duration-ms="1924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:10Z" name="startExtent" finished-at="2022-06-19T21:11:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchNevilleLongbottomTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchNevilleLongbottomTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:10Z" name="searchNevilleLongbottomTest" finished-at="2022-06-19T21:11:10Z" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNevilleLongbottomTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:10Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:11Z" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchNevilleLongbottomTest status=SUCCESS method=SearchCustomer.searchNevilleLongbottomTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:11Z" name="endLOG" finished-at="2022-06-19T21:11:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:11Z" name="tearDown" finished-at="2022-06-19T21:11:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:11Z" name="setUp" finished-at="2022-06-19T21:11:13Z" duration-ms="2284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:13Z" name="startExtent" finished-at="2022-06-19T21:11:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchRonWeaslyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchRonWeaslyTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:13Z" name="searchRonWeaslyTest" finished-at="2022-06-19T21:11:14Z" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRonWeaslyTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:14Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:15Z" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchRonWeaslyTest status=SUCCESS method=SearchCustomer.searchRonWeaslyTest()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:15Z" name="endLOG" finished-at="2022-06-19T21:11:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@72d6b3ba]" started-at="2022-06-19T21:11:15Z" name="tearDown" finished-at="2022-06-19T21:11:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.SearchCustomer -->
      <class name="globalsqatests.OpenAccount">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:00Z" name="setUp" finished-at="2022-06-19T21:12:02Z" duration-ms="2237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="openDollarAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:02Z" name="openDollarAccountTest" finished-at="2022-06-19T21:12:03Z" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDollarAccountTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:02Z" name="startExtent" finished-at="2022-06-19T21:12:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openDollarAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:03Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:04Z" duration-ms="671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDollarAccountTest status=SUCCESS method=OpenAccount.openDollarAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:04Z" name="endLOG" finished-at="2022-06-19T21:12:04Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:04Z" name="tearDown" finished-at="2022-06-19T21:12:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:04Z" name="setUp" finished-at="2022-06-19T21:12:06Z" duration-ms="2228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:06Z" name="startExtent" finished-at="2022-06-19T21:12:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openMultipleAccountsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="openMultipleAccountsTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:06Z" name="openMultipleAccountsTest" finished-at="2022-06-19T21:12:07Z" duration-ms="1174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openMultipleAccountsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:07Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:08Z" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openMultipleAccountsTest status=SUCCESS method=OpenAccount.openMultipleAccountsTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:08Z" name="endLOG" finished-at="2022-06-19T21:12:08Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:08Z" name="tearDown" finished-at="2022-06-19T21:12:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:08Z" name="setUp" finished-at="2022-06-19T21:12:10Z" duration-ms="2096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:10Z" name="startExtent" finished-at="2022-06-19T21:12:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openPoundAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="openPoundAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:10Z" name="openPoundAccountTest" finished-at="2022-06-19T21:12:11Z" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPoundAccountTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:11Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:11Z" duration-ms="660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openPoundAccountTest status=SUCCESS method=OpenAccount.openPoundAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:11Z" name="tearDown" finished-at="2022-06-19T21:12:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:11Z" name="setUp" finished-at="2022-06-19T21:12:14Z" duration-ms="2380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:11Z" name="endLOG" finished-at="2022-06-19T21:12:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:14Z" name="startExtent" finished-at="2022-06-19T21:12:14Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openRupeeAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="openRupeeAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:14Z" name="openRupeeAccountTest" finished-at="2022-06-19T21:12:14Z" duration-ms="759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openRupeeAccountTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:14Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:15Z" duration-ms="660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openRupeeAccountTest status=SUCCESS method=OpenAccount.openRupeeAccountTest()[pri:0, instance:globalsqatests.OpenAccount@51bf5add] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:15Z" name="tearDown" finished-at="2022-06-19T21:12:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.OpenAccount@51bf5add]" started-at="2022-06-19T21:12:15Z" name="endLOG" finished-at="2022-06-19T21:12:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
      </class> <!-- globalsqatests.OpenAccount -->
      <class name="globalsqatests.HomeButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:51Z" name="setUp" finished-at="2022-06-19T21:13:53Z" duration-ms="2551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:53Z" name="startExtent" finished-at="2022-06-19T21:13:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerAddCustomerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerAddCustomerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:53Z" name="bankManagerAddCustomerHomeButtonTest" finished-at="2022-06-19T21:13:54Z" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerAddCustomerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:54Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:54Z" duration-ms="646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerAddCustomerHomeButtonTest status=SUCCESS method=HomeButton.bankManagerAddCustomerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:54Z" name="endLOG" finished-at="2022-06-19T21:13:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:54Z" name="setUp" finished-at="2022-06-19T21:13:56Z" duration-ms="1969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:54Z" name="tearDown" finished-at="2022-06-19T21:13:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:56Z" name="startExtent" finished-at="2022-06-19T21:13:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerCustomersHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerCustomersHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:56Z" name="bankManagerCustomersHomeButtonTest" finished-at="2022-06-19T21:13:57Z" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerCustomersHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:57Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:58Z" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerCustomersHomeButtonTest status=SUCCESS method=HomeButton.bankManagerCustomersHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:58Z" name="endLOG" finished-at="2022-06-19T21:13:58Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:58Z" name="tearDown" finished-at="2022-06-19T21:13:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:13:58Z" name="setUp" finished-at="2022-06-19T21:14:00Z" duration-ms="2370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:00Z" name="startExtent" finished-at="2022-06-19T21:14:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:00Z" name="bankManagerHomeButtonTest" finished-at="2022-06-19T21:14:01Z" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:01Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:01Z" duration-ms="675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerHomeButtonTest status=SUCCESS method=HomeButton.bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:01Z" name="endLOG" finished-at="2022-06-19T21:14:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:01Z" name="tearDown" finished-at="2022-06-19T21:14:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:01Z" name="setUp" finished-at="2022-06-19T21:14:03Z" duration-ms="2078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="bankManagerOpenAccountHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:03Z" name="bankManagerOpenAccountHomeButtonTest" finished-at="2022-06-19T21:14:04Z" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerOpenAccountHomeButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:03Z" name="startExtent" finished-at="2022-06-19T21:14:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerOpenAccountHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:04Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:05Z" duration-ms="680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerOpenAccountHomeButtonTest status=SUCCESS method=HomeButton.bankManagerOpenAccountHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:05Z" name="tearDown" finished-at="2022-06-19T21:14:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:05Z" name="setUp" finished-at="2022-06-19T21:14:07Z" duration-ms="2347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:05Z" name="endLOG" finished-at="2022-06-19T21:14:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:07Z" name="startExtent" finished-at="2022-06-19T21:14:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.customerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:07Z" name="customerHomeButtonTest" finished-at="2022-06-19T21:14:08Z" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:08Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:08Z" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerHomeButtonTest status=SUCCESS method=HomeButton.customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:08Z" name="tearDown" finished-at="2022-06-19T21:14:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:08Z" name="endLOG" finished-at="2022-06-19T21:14:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:08Z" name="setUp" finished-at="2022-06-19T21:14:10Z" duration-ms="2074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:10Z" name="startExtent" finished-at="2022-06-19T21:14:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.customerLoginHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerLoginHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:10Z" name="customerLoginHomeButtonTest" finished-at="2022-06-19T21:14:11Z" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerLoginHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:11Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:11Z" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerLoginHomeButtonTest status=SUCCESS method=HomeButton.customerLoginHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:11Z" name="endLOG" finished-at="2022-06-19T21:14:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:11Z" name="tearDown" finished-at="2022-06-19T21:14:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:11Z" name="setUp" finished-at="2022-06-19T21:14:13Z" duration-ms="1993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="depositHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:13Z" name="depositHomeButtonTest" finished-at="2022-06-19T21:14:14Z" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositHomeButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:13Z" name="startExtent" finished-at="2022-06-19T21:14:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.depositHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:14Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:15Z" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositHomeButtonTest status=SUCCESS method=HomeButton.depositHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:15Z" name="endLOG" finished-at="2022-06-19T21:14:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:15Z" name="setUp" finished-at="2022-06-19T21:14:17Z" duration-ms="1823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:15Z" name="tearDown" finished-at="2022-06-19T21:14:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:17Z" name="startExtent" finished-at="2022-06-19T21:14:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.transactionsHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="transactionsHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:17Z" name="transactionsHomeButtonTest" finished-at="2022-06-19T21:14:17Z" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:17Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:18Z" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsHomeButtonTest status=SUCCESS method=HomeButton.transactionsHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:18Z" name="tearDown" finished-at="2022-06-19T21:14:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:18Z" name="endLOG" finished-at="2022-06-19T21:14:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:18Z" name="setUp" finished-at="2022-06-19T21:14:20Z" duration-ms="2029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:20Z" name="startExtent" finished-at="2022-06-19T21:14:20Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.withdawlHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="withdawlHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:20Z" name="withdawlHomeButtonTest" finished-at="2022-06-19T21:14:21Z" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdawlHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:21Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:22Z" duration-ms="672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdawlHomeButtonTest status=SUCCESS method=HomeButton.withdawlHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@389b0789] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:22Z" name="endLOG" finished-at="2022-06-19T21:14:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@389b0789]" started-at="2022-06-19T21:14:22Z" name="tearDown" finished-at="2022-06-19T21:14:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.HomeButton -->
      <class name="globalsqatests.Deposit">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:37Z" name="setUp" finished-at="2022-06-19T21:11:39Z" duration-ms="1921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:39Z" name="startExtent" finished-at="2022-06-19T21:11:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositAlbusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositAlbusTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:39Z" name="depositAlbusTest" finished-at="2022-06-19T21:11:40Z" duration-ms="1053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAlbusTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:40Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:41Z" duration-ms="672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositAlbusTest status=SUCCESS method=Deposit.depositAlbusTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:41Z" name="endLOG" finished-at="2022-06-19T21:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:41Z" name="tearDown" finished-at="2022-06-19T21:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:41Z" name="setUp" finished-at="2022-06-19T21:11:42Z" duration-ms="1765" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:42Z" name="startExtent" finished-at="2022-06-19T21:11:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositHarryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositHarryTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:42Z" name="depositHarryTest" finished-at="2022-06-19T21:11:43Z" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositHarryTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:43Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:44Z" duration-ms="672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositHarryTest status=SUCCESS method=Deposit.depositHarryTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:44Z" name="endLOG" finished-at="2022-06-19T21:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:44Z" name="tearDown" finished-at="2022-06-19T21:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:44Z" name="setUp" finished-at="2022-06-19T21:11:46Z" duration-ms="2031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:46Z" name="startExtent" finished-at="2022-06-19T21:11:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositHermoineTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositHermoineTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:46Z" name="depositHermoineTest" finished-at="2022-06-19T21:11:47Z" duration-ms="999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositHermoineTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:47Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:48Z" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositHermoineTest status=SUCCESS method=Deposit.depositHermoineTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:48Z" name="endLOG" finished-at="2022-06-19T21:11:48Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:48Z" name="tearDown" finished-at="2022-06-19T21:11:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:48Z" name="setUp" finished-at="2022-06-19T21:11:50Z" duration-ms="1867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="depositNevilleTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:50Z" name="depositNevilleTest" finished-at="2022-06-19T21:11:51Z" duration-ms="1208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositNevilleTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:50Z" name="startExtent" finished-at="2022-06-19T21:11:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositNevilleTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:51Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:51Z" duration-ms="671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositNevilleTest status=SUCCESS method=Deposit.depositNevilleTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:51Z" name="endLOG" finished-at="2022-06-19T21:11:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:51Z" name="setUp" finished-at="2022-06-19T21:11:53Z" duration-ms="1837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:51Z" name="tearDown" finished-at="2022-06-19T21:11:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="depositRonTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:53Z" name="depositRonTest" finished-at="2022-06-19T21:11:54Z" duration-ms="991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositRonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:53Z" name="startExtent" finished-at="2022-06-19T21:11:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.depositRonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:54Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:55Z" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositRonTest status=SUCCESS method=Deposit.depositRonTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:55Z" name="endLOG" finished-at="2022-06-19T21:11:55Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:55Z" name="setUp" finished-at="2022-06-19T21:11:57Z" duration-ms="1967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:55Z" name="tearDown" finished-at="2022-06-19T21:11:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="newAccountDepositTest()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:57Z" name="newAccountDepositTest" finished-at="2022-06-19T21:11:59Z" duration-ms="2182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newAccountDepositTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:57Z" name="startExtent" finished-at="2022-06-19T21:11:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Deposit.newAccountDepositTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:11:59Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:00Z" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newAccountDepositTest status=SUCCESS method=Deposit.newAccountDepositTest()[pri:0, instance:globalsqatests.Deposit@163370c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:12:00Z" name="endLOG" finished-at="2022-06-19T21:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Deposit@163370c2]" started-at="2022-06-19T21:12:00Z" name="tearDown" finished-at="2022-06-19T21:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.Deposit -->
      <class name="globalsqatests.BackButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:08:58Z" name="setUp" finished-at="2022-06-19T21:09:00Z" duration-ms="2044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:00Z" name="startExtent" finished-at="2022-06-19T21:09:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.harryPotterBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:00Z" name="harryPotterBackButtonTest" finished-at="2022-06-19T21:09:01Z" duration-ms="1044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterBackButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:01Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:02Z" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterBackButtonTest status=SUCCESS method=BackButton.harryPotterBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:02Z" name="endLOG" finished-at="2022-06-19T21:09:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:02Z" name="tearDown" finished-at="2022-06-19T21:09:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:02Z" name="setUp" finished-at="2022-06-19T21:09:04Z" duration-ms="1984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hermoineGrangerBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:04Z" name="hermoineGrangerBackButtonTest" finished-at="2022-06-19T21:09:05Z" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerBackButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:04Z" name="startExtent" finished-at="2022-06-19T21:09:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.hermoineGrangerBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:05Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:05Z" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerBackButtonTest status=SUCCESS method=BackButton.hermoineGrangerBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:05Z" name="endLOG" finished-at="2022-06-19T21:09:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:05Z" name="setUp" finished-at="2022-06-19T21:09:07Z" duration-ms="1882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:05Z" name="tearDown" finished-at="2022-06-19T21:09:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:07Z" name="startExtent" finished-at="2022-06-19T21:09:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.nevilleLongbottomBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="nevilleLongbottomBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:07Z" name="nevilleLongbottomBackButtonTest" finished-at="2022-06-19T21:09:08Z" duration-ms="941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nevilleLongbottomBackButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:08Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:09Z" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nevilleLongbottomBackButtonTest status=SUCCESS method=BackButton.nevilleLongbottomBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:09Z" name="endLOG" finished-at="2022-06-19T21:09:09Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:09Z" name="setUp" finished-at="2022-06-19T21:09:11Z" duration-ms="2412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:09Z" name="tearDown" finished-at="2022-06-19T21:09:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:11Z" name="startExtent" finished-at="2022-06-19T21:09:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.ronWeaslyBackButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:11Z" name="ronWeaslyBackButtonTest" finished-at="2022-06-19T21:09:12Z" duration-ms="982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyBackButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:12Z" name="afterEachTestMethod" finished-at="2022-06-19T21:09:13Z" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyBackButtonTest status=SUCCESS method=BackButton.ronWeaslyBackButtonTest()[pri:0, instance:globalsqatests.BackButton@2ca923bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:13Z" name="tearDown" finished-at="2022-06-19T21:09:13Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.BackButton@2ca923bb]" started-at="2022-06-19T21:09:13Z" name="endLOG" finished-at="2022-06-19T21:09:13Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
      </class> <!-- globalsqatests.BackButton -->
      <class name="globalsqatests.CustomerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:22Z" name="setUp" finished-at="2022-06-19T21:14:24Z" duration-ms="1939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:24Z" name="customerLoginButtonTest" finished-at="2022-06-19T21:14:27Z" duration-ms="3323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerLoginButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:24Z" name="startExtent" finished-at="2022-06-19T21:14:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.CustomerLoginButton.customerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:27Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:28Z" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerLoginButtonTest status=SUCCESS method=CustomerLoginButton.customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:28Z" name="endLOG" finished-at="2022-06-19T21:14:28Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.CustomerLoginButton@13d9cbf5]" started-at="2022-06-19T21:14:28Z" name="tearDown" finished-at="2022-06-19T21:14:28Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.CustomerLoginButton -->
      <class name="globalsqatests.ResetButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:54Z" name="setUp" finished-at="2022-06-19T21:08:56Z" duration-ms="2049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:56Z" name="startExtent" finished-at="2022-06-19T21:08:56Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.ResetButton.resetButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:56Z" name="resetButtonTest" finished-at="2022-06-19T21:08:57Z" duration-ms="1058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:57Z" name="afterEachTestMethod" finished-at="2022-06-19T21:08:58Z" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetButtonTest status=SUCCESS method=ResetButton.resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@70e38ce1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:58Z" name="endLOG" finished-at="2022-06-19T21:08:58Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.ResetButton@70e38ce1]" started-at="2022-06-19T21:08:58Z" name="tearDown" finished-at="2022-06-19T21:08:58Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.ResetButton -->
      <class name="globalsqatests.BankManagerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:28Z" name="setUp" finished-at="2022-06-19T21:14:30Z" duration-ms="2087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:30Z" name="startExtent" finished-at="2022-06-19T21:14:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BankManagerLoginButton.bankManagerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:30Z" name="bankManagerLoginButtonTest" finished-at="2022-06-19T21:14:33Z" duration-ms="3282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerLoginButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:33Z" name="afterEachTestMethod" finished-at="2022-06-19T21:14:34Z" duration-ms="670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerLoginButtonTest status=SUCCESS method=BankManagerLoginButton.bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:34Z" name="endLOG" finished-at="2022-06-19T21:14:34Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BankManagerLoginButton@478db956]" started-at="2022-06-19T21:14:34Z" name="tearDown" finished-at="2022-06-19T21:14:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.BankManagerLoginButton -->
      <class name="globalsqatests.Withdraw">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:29Z" name="setUp" finished-at="2022-06-19T21:11:31Z" duration-ms="2309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="withdrawFunctionTest()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:31Z" name="withdrawFunctionTest" finished-at="2022-06-19T21:11:32Z" duration-ms="1043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawFunctionTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:31Z" name="startExtent" finished-at="2022-06-19T21:11:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Withdraw.withdrawFunctionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:32Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:33Z" duration-ms="652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdrawFunctionTest status=SUCCESS method=Withdraw.withdrawFunctionTest()[pri:0, instance:globalsqatests.Withdraw@7de62196] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:33Z" name="endLOG" finished-at="2022-06-19T21:11:33Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:33Z" name="setUp" finished-at="2022-06-19T21:11:35Z" duration-ms="2319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:33Z" name="tearDown" finished-at="2022-06-19T21:11:33Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:35Z" name="startExtent" finished-at="2022-06-19T21:11:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Withdraw.withdrawNegativeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="withdrawNegativeTest()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:35Z" name="withdrawNegativeTest" finished-at="2022-06-19T21:11:36Z" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawNegativeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:36Z" name="afterEachTestMethod" finished-at="2022-06-19T21:11:37Z" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdrawNegativeTest status=SUCCESS method=Withdraw.withdrawNegativeTest()[pri:0, instance:globalsqatests.Withdraw@7de62196] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:37Z" name="tearDown" finished-at="2022-06-19T21:11:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Withdraw@7de62196]" started-at="2022-06-19T21:11:37Z" name="endLOG" finished-at="2022-06-19T21:11:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
      </class> <!-- globalsqatests.Withdraw -->
      <class name="globalsqatests.TransactionsButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:09:40Z" name="setUp" finished-at="2022-06-19T21:09:42Z" duration-ms="2181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:09:42Z" name="startExtent" finished-at="2022-06-19T21:09:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.albusTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="albusTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:09:42Z" name="albusTransactionsButtonTest" finished-at="2022-06-19T21:10:33Z" duration-ms="50578" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with value: ALbus Dumbledore
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.226.186', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with value: ALbus Dumbledore
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.226.186', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.findOptionsByValue(Select.java:287)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:190)
at globalsqapages.CustomerPage.selectOptionFromCustomerDropDown(CustomerPage.java:73)
at globalsqatests.TransactionsButton.albusTransactionsButtonTest(TransactionsButton.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- albusTransactionsButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:33Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:34Z" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=albusTransactionsButtonTest status=FAILURE method=TransactionsButton.albusTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:34Z" name="endLOG" finished-at="2022-06-19T21:10:34Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:34Z" name="tearDown" finished-at="2022-06-19T21:10:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:34Z" name="setUp" finished-at="2022-06-19T21:10:36Z" duration-ms="1997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:36Z" name="startExtent" finished-at="2022-06-19T21:10:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.harryTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:36Z" name="harryTransactionsButtonTest" finished-at="2022-06-19T21:10:37Z" duration-ms="948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryTransactionsButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:37Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:37Z" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryTransactionsButtonTest status=SUCCESS method=TransactionsButton.harryTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:37Z" name="endLOG" finished-at="2022-06-19T21:10:37Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:37Z" name="tearDown" finished-at="2022-06-19T21:10:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:37Z" name="setUp" finished-at="2022-06-19T21:10:39Z" duration-ms="1940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hermoineTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:39Z" name="hermoineTransactionsButtonTest" finished-at="2022-06-19T21:10:40Z" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineTransactionsButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:39Z" name="startExtent" finished-at="2022-06-19T21:10:39Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.hermoineTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:40Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:41Z" duration-ms="675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineTransactionsButtonTest status=SUCCESS method=TransactionsButton.hermoineTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:41Z" name="endLOG" finished-at="2022-06-19T21:10:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:41Z" name="tearDown" finished-at="2022-06-19T21:10:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:41Z" name="setUp" finished-at="2022-06-19T21:10:43Z" duration-ms="2555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="nevilleTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:43Z" name="nevilleTransactionsButtonTest" finished-at="2022-06-19T21:10:44Z" duration-ms="865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nevilleTransactionsButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:43Z" name="startExtent" finished-at="2022-06-19T21:10:43Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.nevilleTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:44Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:45Z" duration-ms="650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nevilleTransactionsButtonTest status=SUCCESS method=TransactionsButton.nevilleTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:45Z" name="endLOG" finished-at="2022-06-19T21:10:45Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:45Z" name="tearDown" finished-at="2022-06-19T21:10:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:45Z" name="setUp" finished-at="2022-06-19T21:10:47Z" duration-ms="2098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="newCustomerTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:47Z" name="newCustomerTransactionsButtonTest" finished-at="2022-06-19T21:10:49Z" duration-ms="2085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCustomerTransactionsButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:47Z" name="startExtent" finished-at="2022-06-19T21:10:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.newCustomerTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:49Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:50Z" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newCustomerTransactionsButtonTest status=SUCCESS method=TransactionsButton.newCustomerTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:50Z" name="endLOG" finished-at="2022-06-19T21:10:50Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:50Z" name="tearDown" finished-at="2022-06-19T21:10:50Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:50Z" name="setUp" finished-at="2022-06-19T21:10:52Z" duration-ms="1839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:52Z" name="startExtent" finished-at="2022-06-19T21:10:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.ronTransactionsButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:52Z" name="ronTransactionsButtonTest" finished-at="2022-06-19T21:10:53Z" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronTransactionsButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:53Z" name="afterEachTestMethod" finished-at="2022-06-19T21:10:53Z" duration-ms="670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronTransactionsButtonTest status=SUCCESS method=TransactionsButton.ronTransactionsButtonTest()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:53Z" name="endLOG" finished-at="2022-06-19T21:10:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@1ebea008]" started-at="2022-06-19T21:10:53Z" name="tearDown" finished-at="2022-06-19T21:10:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.TransactionsButton -->
      <class name="globalsqatests.UserLogin">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:15Z" name="setUp" finished-at="2022-06-19T21:12:17Z" duration-ms="2006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="albusDumbledoreLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:17Z" name="albusDumbledoreLoginTest" finished-at="2022-06-19T21:12:18Z" duration-ms="703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- albusDumbledoreLoginTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:17Z" name="startExtent" finished-at="2022-06-19T21:12:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.albusDumbledoreLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:18Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:18Z" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=albusDumbledoreLoginTest status=SUCCESS method=UserLogin.albusDumbledoreLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:18Z" name="endLOG" finished-at="2022-06-19T21:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:18Z" name="tearDown" finished-at="2022-06-19T21:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:18Z" name="setUp" finished-at="2022-06-19T21:12:20Z" duration-ms="2002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:20Z" name="startExtent" finished-at="2022-06-19T21:12:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.createAnAccountAndLoginWithFaieqTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="createAnAccountAndLoginWithFaieqTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:20Z" name="createAnAccountAndLoginWithFaieqTest" finished-at="2022-06-19T21:12:22Z" duration-ms="1429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndLoginWithFaieqTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:22Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:22Z" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndLoginWithFaieqTest status=SUCCESS method=UserLogin.createAnAccountAndLoginWithFaieqTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:22Z" name="endLOG" finished-at="2022-06-19T21:12:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:22Z" name="setUp" finished-at="2022-06-19T21:12:24Z" duration-ms="1851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:22Z" name="tearDown" finished-at="2022-06-19T21:12:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:24Z" name="startExtent" finished-at="2022-06-19T21:12:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.createAnAccountAndLoginWithJoeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="createAnAccountAndLoginWithJoeTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:24Z" name="createAnAccountAndLoginWithJoeTest" finished-at="2022-06-19T21:12:26Z" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndLoginWithJoeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:26Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:26Z" duration-ms="688" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndLoginWithJoeTest status=SUCCESS method=UserLogin.createAnAccountAndLoginWithJoeTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:26Z" name="endLOG" finished-at="2022-06-19T21:12:26Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:26Z" name="tearDown" finished-at="2022-06-19T21:12:26Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:26Z" name="setUp" finished-at="2022-06-19T21:12:29Z" duration-ms="2294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createAnAccountAndLoginWithRownakTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:29Z" name="createAnAccountAndLoginWithRownakTest" finished-at="2022-06-19T21:12:31Z" duration-ms="1884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndLoginWithRownakTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:29Z" name="startExtent" finished-at="2022-06-19T21:12:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.createAnAccountAndLoginWithRownakTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:31Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:31Z" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndLoginWithRownakTest status=SUCCESS method=UserLogin.createAnAccountAndLoginWithRownakTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:31Z" name="endLOG" finished-at="2022-06-19T21:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:31Z" name="tearDown" finished-at="2022-06-19T21:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:31Z" name="setUp" finished-at="2022-06-19T21:12:34Z" duration-ms="2575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:34Z" name="startExtent" finished-at="2022-06-19T21:12:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.harryPotterLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:34Z" name="harryPotterLoginTest" finished-at="2022-06-19T21:12:34Z" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:34Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:35Z" duration-ms="651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterLoginTest status=SUCCESS method=UserLogin.harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:35Z" name="setUp" finished-at="2022-06-19T21:12:44Z" duration-ms="9084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:35Z" name="endLOG" finished-at="2022-06-19T21:12:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:35Z" name="tearDown" finished-at="2022-06-19T21:12:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="hermoineGrangerLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:44Z" name="hermoineGrangerLoginTest" finished-at="2022-06-19T21:12:45Z" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerLoginTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:44Z" name="startExtent" finished-at="2022-06-19T21:12:44Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.hermoineGrangerLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:45Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:46Z" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerLoginTest status=SUCCESS method=UserLogin.hermoineGrangerLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:46Z" name="endLOG" finished-at="2022-06-19T21:12:46Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:46Z" name="setUp" finished-at="2022-06-19T21:12:47Z" duration-ms="1838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:46Z" name="tearDown" finished-at="2022-06-19T21:12:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:47Z" name="startExtent" finished-at="2022-06-19T21:12:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.ronWeaslyLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:47Z" name="ronWeaslyLoginTest" finished-at="2022-06-19T21:12:48Z" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:48Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:49Z" duration-ms="647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyLoginTest status=SUCCESS method=UserLogin.ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@7905a0b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:49Z" name="tearDown" finished-at="2022-06-19T21:12:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.UserLogin@7905a0b8]" started-at="2022-06-19T21:12:49Z" name="endLOG" finished-at="2022-06-19T21:12:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
      </class> <!-- globalsqatests.UserLogin -->
      <class name="globalsqatests.CustomerAccounts">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:45Z" name="extentSetup" finished-at="2022-06-19T21:08:45Z" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@e124366]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:45Z" name="setUp" finished-at="2022-06-19T21:08:49Z" duration-ms="3585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:49Z" name="startExtent" finished-at="2022-06-19T21:08:49Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.CustomerAccounts.CustomerDropDownOptionsVisibilityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="CustomerDropDownOptionsVisibilityTest()[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:49Z" name="CustomerDropDownOptionsVisibilityTest" finished-at="2022-06-19T21:08:50Z" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerDropDownOptionsVisibilityTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:50Z" name="afterEachTestMethod" finished-at="2022-06-19T21:08:51Z" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerDropDownOptionsVisibilityTest status=SUCCESS method=CustomerAccounts.CustomerDropDownOptionsVisibilityTest()[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:51Z" name="endLOG" finished-at="2022-06-19T21:08:51Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:08:51Z" name="tearDown" finished-at="2022-06-19T21:08:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:globalsqatests.CustomerAccounts@2ca26d77]" started-at="2022-06-19T21:14:34Z" name="generateReport" finished-at="2022-06-19T21:14:34Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- globalsqatests.CustomerAccounts -->
      <class name="globalsqatests.Logout">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:49Z" name="setUp" finished-at="2022-06-19T21:12:51Z" duration-ms="2021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:51Z" name="startExtent" finished-at="2022-06-19T21:12:51Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.albusDumbledoreLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="albusDumbledoreLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:51Z" name="albusDumbledoreLogoutTest" finished-at="2022-06-19T21:12:57Z" duration-ms="6618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- albusDumbledoreLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:57Z" name="afterEachTestMethod" finished-at="2022-06-19T21:12:58Z" duration-ms="678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=albusDumbledoreLogoutTest status=SUCCESS method=Logout.albusDumbledoreLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:58Z" name="tearDown" finished-at="2022-06-19T21:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:58Z" name="setUp" finished-at="2022-06-19T21:13:00Z" duration-ms="1959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:12:58Z" name="endLOG" finished-at="2022-06-19T21:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:00Z" name="startExtent" finished-at="2022-06-19T21:13:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.createAnAccountAndLogoutWithFaieqTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="createAnAccountAndLogoutWithFaieqTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:00Z" name="createAnAccountAndLogoutWithFaieqTest" finished-at="2022-06-19T21:13:05Z" duration-ms="4465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndLogoutWithFaieqTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:05Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:05Z" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndLogoutWithFaieqTest status=SUCCESS method=Logout.createAnAccountAndLogoutWithFaieqTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:05Z" name="endLOG" finished-at="2022-06-19T21:13:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:05Z" name="setUp" finished-at="2022-06-19T21:13:07Z" duration-ms="2129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:05Z" name="tearDown" finished-at="2022-06-19T21:13:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:07Z" name="startExtent" finished-at="2022-06-19T21:13:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.createAnAccountAndLogoutWithJoeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="createAnAccountAndLogoutWithJoeTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:07Z" name="createAnAccountAndLogoutWithJoeTest" finished-at="2022-06-19T21:13:12Z" duration-ms="4476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnAccountAndLogoutWithJoeTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:12Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:12Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAnAccountAndLogoutWithJoeTest status=SUCCESS method=Logout.createAnAccountAndLogoutWithJoeTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:12Z" name="endLOG" finished-at="2022-06-19T21:13:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:12Z" name="setUp" finished-at="2022-06-19T21:13:14Z" duration-ms="1962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:12Z" name="tearDown" finished-at="2022-06-19T21:13:12Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:14Z" name="startExtent" finished-at="2022-06-19T21:13:14Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.harryPotterLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:14Z" name="harryPotterLogoutTest" finished-at="2022-06-19T21:13:21Z" duration-ms="6667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:21Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:22Z" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterLogoutTest status=SUCCESS method=Logout.harryPotterLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:22Z" name="endLOG" finished-at="2022-06-19T21:13:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:22Z" name="tearDown" finished-at="2022-06-19T21:13:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:22Z" name="setUp" finished-at="2022-06-19T21:13:24Z" duration-ms="2174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:24Z" name="startExtent" finished-at="2022-06-19T21:13:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.hermoineGrangerLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hermoineGrangerLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:24Z" name="hermoineGrangerLogoutTest" finished-at="2022-06-19T21:13:31Z" duration-ms="6623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hermoineGrangerLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:31Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:31Z" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hermoineGrangerLogoutTest status=SUCCESS method=Logout.hermoineGrangerLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:31Z" name="setUp" finished-at="2022-06-19T21:13:34Z" duration-ms="2619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:31Z" name="endLOG" finished-at="2022-06-19T21:13:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:31Z" name="tearDown" finished-at="2022-06-19T21:13:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="nevilleLongbottomLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:34Z" name="nevilleLongbottomLogoutTest" finished-at="2022-06-19T21:13:41Z" duration-ms="6611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nevilleLongbottomLogoutTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:34Z" name="startExtent" finished-at="2022-06-19T21:13:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.nevilleLongbottomLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:41Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:41Z" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nevilleLongbottomLogoutTest status=SUCCESS method=Logout.nevilleLongbottomLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:41Z" name="endLOG" finished-at="2022-06-19T21:13:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:41Z" name="tearDown" finished-at="2022-06-19T21:13:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:41Z" name="setUp" finished-at="2022-06-19T21:13:43Z" duration-ms="2242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:43Z" name="startExtent" finished-at="2022-06-19T21:13:43Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.Logout.ronWeaslyLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:43Z" name="ronWeaslyLogoutTest" finished-at="2022-06-19T21:13:50Z" duration-ms="6624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:50Z" name="afterEachTestMethod" finished-at="2022-06-19T21:13:51Z" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyLogoutTest status=SUCCESS method=Logout.ronWeaslyLogoutTest()[pri:0, instance:globalsqatests.Logout@35a3d49f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="endLOG()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:51Z" name="endLOG" finished-at="2022-06-19T21:13:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLOG -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.Logout@35a3d49f]" started-at="2022-06-19T21:13:51Z" name="tearDown" finished-at="2022-06-19T21:13:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.Logout -->
    </test> <!-- com.GlobalSQA Tests -->
  </suite> <!-- CRIP Automation Script -->
</testng-results>
