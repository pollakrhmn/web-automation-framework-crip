<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="48" total="112" passed="50" failed="14" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-17T00:34:17Z" name="CRIP Automation Script" finished-at="2022-06-17T00:41:51Z" duration-ms="453956">
    <groups>
    </groups>
    <test started-at="2022-06-17T00:34:17Z" name="com.SauceDemo Tests" finished-at="2022-06-17T00:40:46Z" duration-ms="389125">
      <class name="saucedemotests.Login">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:53Z" name="setUp" finished-at="2022-06-17T00:39:54Z" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidLogInTest()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:54Z" name="invalidLogInTest" finished-at="2022-06-17T00:39:54Z" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogInTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:54Z" name="startExtent" finished-at="2022-06-17T00:39:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.invalidLogInTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:54Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:55Z" duration-ms="671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogInTest status=SUCCESS method=Login.invalidLogInTest()[pri:0, instance:saucedemotests.Login@2eea88a1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:55Z" name="tearDown" finished-at="2022-06-17T00:39:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:55Z" name="setUp" finished-at="2022-06-17T00:39:57Z" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:57Z" name="startExtent" finished-at="2022-06-17T00:39:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.logInTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="logInTest()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:57Z" name="logInTest" finished-at="2022-06-17T00:39:57Z" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:57Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:58Z" duration-ms="694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInTest status=SUCCESS method=Login.logInTest()[pri:0, instance:saucedemotests.Login@2eea88a1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:58Z" name="tearDown" finished-at="2022-06-17T00:39:58Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:58Z" name="setUp" finished-at="2022-06-17T00:39:59Z" duration-ms="1498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:59Z" name="startExtent" finished-at="2022-06-17T00:39:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Login.validateLogInButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="validateLogInButton()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:59Z" name="validateLogInButton" finished-at="2022-06-17T00:39:59Z" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogInButton -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:39:59Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:00Z" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogInButton status=SUCCESS method=Login.validateLogInButton()[pri:0, instance:saucedemotests.Login@2eea88a1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Login@2eea88a1]" started-at="2022-06-17T00:40:00Z" name="tearDown" finished-at="2022-06-17T00:40:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.Login -->
      <class name="saucedemotests.AddItemsToCart">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:17Z" name="setUp" finished-at="2022-06-17T00:34:20Z" duration-ms="3081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:20Z" name="startExtent" finished-at="2022-06-17T00:34:20Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBackPackToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBackPackToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:20Z" name="addBackPackToCartTest" finished-at="2022-06-17T00:34:20Z" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBackPackToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:20Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:21Z" duration-ms="891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBackPackToCartTest status=SUCCESS method=AddItemsToCart.addBackPackToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:21Z" name="tearDown" finished-at="2022-06-17T00:34:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:21Z" name="setUp" finished-at="2022-06-17T00:34:23Z" duration-ms="1840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:23Z" name="startExtent" finished-at="2022-06-17T00:34:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBikeLightToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBikeLightToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:23Z" name="addBikeLightToCartTest" finished-at="2022-06-17T00:34:23Z" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBikeLightToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:23Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:24Z" duration-ms="731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBikeLightToCartTest status=SUCCESS method=AddItemsToCart.addBikeLightToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:24Z" name="tearDown" finished-at="2022-06-17T00:34:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:24Z" name="setUp" finished-at="2022-06-17T00:34:26Z" duration-ms="1602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:26Z" name="startExtent" finished-at="2022-06-17T00:34:26Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addBoltShirtToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addBoltShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:26Z" name="addBoltShirtToCartTest" finished-at="2022-06-17T00:34:26Z" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBoltShirtToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:26Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:27Z" duration-ms="718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBoltShirtToCartTest status=SUCCESS method=AddItemsToCart.addBoltShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:27Z" name="tearDown" finished-at="2022-06-17T00:34:27Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:27Z" name="setUp" finished-at="2022-06-17T00:34:28Z" duration-ms="1630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:28Z" name="startExtent" finished-at="2022-06-17T00:34:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addFleeceJacketToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addFleeceJacketToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:28Z" name="addFleeceJacketToCartTest" finished-at="2022-06-17T00:34:29Z" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFleeceJacketToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:29Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:30Z" duration-ms="692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFleeceJacketToCartTest status=SUCCESS method=AddItemsToCart.addFleeceJacketToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:30Z" name="tearDown" finished-at="2022-06-17T00:34:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:30Z" name="setUp" finished-at="2022-06-17T00:34:31Z" duration-ms="1573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:31Z" name="startExtent" finished-at="2022-06-17T00:34:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addMultipleItemsToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addMultipleItemsToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:31Z" name="addMultipleItemsToCartTest" finished-at="2022-06-17T00:34:32Z" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleItemsToCartTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:32Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:32Z" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleItemsToCartTest status=SUCCESS method=AddItemsToCart.addMultipleItemsToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:32Z" name="tearDown" finished-at="2022-06-17T00:34:32Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:32Z" name="setUp" finished-at="2022-06-17T00:34:34Z" duration-ms="1511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addOnesieToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:34Z" name="addOnesieToCartTest" finished-at="2022-06-17T00:34:34Z" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnesieToCartTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:34Z" name="startExtent" finished-at="2022-06-17T00:34:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addOnesieToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:34Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:35Z" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOnesieToCartTest status=SUCCESS method=AddItemsToCart.addOnesieToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:35Z" name="tearDown" finished-at="2022-06-17T00:34:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:35Z" name="setUp" finished-at="2022-06-17T00:34:37Z" duration-ms="1674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addRedShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:37Z" name="addRedShirtToCartTest" finished-at="2022-06-17T00:34:37Z" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRedShirtToCartTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:37Z" name="startExtent" finished-at="2022-06-17T00:34:37Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.AddItemsToCart.addRedShirtToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:37Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:38Z" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRedShirtToCartTest status=SUCCESS method=AddItemsToCart.addRedShirtToCartTest()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.AddItemsToCart@5f9edf14]" started-at="2022-06-17T00:34:38Z" name="tearDown" finished-at="2022-06-17T00:34:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.AddItemsToCart -->
      <class name="saucedemotests.MenuBar">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:00Z" name="setUp" finished-at="2022-06-17T00:40:01Z" duration-ms="1364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:01Z" name="startExtent" finished-at="2022-06-17T00:40:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarAboutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="menuBarAboutTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:01Z" name="menuBarAboutTest" finished-at="2022-06-17T00:40:04Z" duration-ms="2746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarAboutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:04Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:05Z" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarAboutTest status=SUCCESS method=MenuBar.menuBarAboutTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:05Z" name="tearDown" finished-at="2022-06-17T00:40:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:05Z" name="setUp" finished-at="2022-06-17T00:40:06Z" duration-ms="1363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="menuBarAllItemsTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:06Z" name="menuBarAllItemsTest" finished-at="2022-06-17T00:40:07Z" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarAllItemsTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:06Z" name="startExtent" finished-at="2022-06-17T00:40:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarAllItemsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:07Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:07Z" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarAllItemsTest status=SUCCESS method=MenuBar.menuBarAllItemsTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:07Z" name="setUp" finished-at="2022-06-17T00:40:09Z" duration-ms="1515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:07Z" name="tearDown" finished-at="2022-06-17T00:40:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:09Z" name="startExtent" finished-at="2022-06-17T00:40:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.MenuBar.menuBarLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="menuBarLogoutTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:09Z" name="menuBarLogoutTest" finished-at="2022-06-17T00:40:10Z" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarLogoutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:10Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:10Z" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarLogoutTest status=SUCCESS method=MenuBar.menuBarLogoutTest()[pri:0, instance:saucedemotests.MenuBar@7ac296f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.MenuBar@7ac296f6]" started-at="2022-06-17T00:40:10Z" name="tearDown" finished-at="2022-06-17T00:40:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.MenuBar -->
      <class name="saucedemotests.ClickFunctionality">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:44Z" name="setUp" finished-at="2022-06-17T00:34:45Z" duration-ms="1560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:45Z" name="startExtent" finished-at="2022-06-17T00:34:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickCCPATest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickCCPATest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:45Z" name="clickCCPATest" finished-at="2022-06-17T00:34:53Z" duration-ms="7466" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (800, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f42b4ee4e343eb8c8fbb7f3d0bafb427, clickElement {id=ed0febd8-3012-4221-804c-47afdc54f5e9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56691}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56691/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (f42b4ee4e343eb8c8fbb7f3d0bafb427)] -> xpath: //span[contains(text(),'CCPA')]]
Session ID: f42b4ee4e343eb8c8fbb7f3d0bafb427]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (800, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f42b4ee4e343eb8c8fbb7f3d0bafb427, clickElement {id=ed0febd8-3012-4221-804c-47afdc54f5e9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56691}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56691/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (f42b4ee4e343eb8c8fbb7f3d0bafb427)] -> xpath: //span[contains(text(),'CCPA')]]
Session ID: f42b4ee4e343eb8c8fbb7f3d0bafb427
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickCCPA(SauceLabsPage.java:126)
at saucedemotests.ClickFunctionality.clickCCPATest(ClickFunctionality.java:204)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCCPATest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:53Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:54Z" duration-ms="752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCCPATest status=FAILURE method=ClickFunctionality.clickCCPATest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:54Z" name="tearDown" finished-at="2022-06-17T00:34:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:54Z" name="setUp" finished-at="2022-06-17T00:34:55Z" duration-ms="1502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:55Z" name="startExtent" finished-at="2022-06-17T00:34:55Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickCookiesSettingAndConfirmTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickCookiesSettingAndConfirmTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:34:55Z" name="clickCookiesSettingAndConfirmTest" finished-at="2022-06-17T00:35:04Z" duration-ms="8491" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (873, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [856c4694a7cb07dd2eca23d626ba2756, clickElement {id=dc9e5801-9ded-4b58-a582-c4121c5d2cdb}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56792}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56792/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (856c4694a7cb07dd2eca23d626ba2756)] -> xpath: //a[contains(text(),'Cookies Settings')]]
Session ID: 856c4694a7cb07dd2eca23d626ba2756]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (873, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [856c4694a7cb07dd2eca23d626ba2756, clickElement {id=dc9e5801-9ded-4b58-a582-c4121c5d2cdb}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56792}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56792/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (856c4694a7cb07dd2eca23d626ba2756)] -> xpath: //a[contains(text(),'Cookies Settings')]]
Session ID: 856c4694a7cb07dd2eca23d626ba2756
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickCookiesSetting(SauceLabsPage.java:130)
at saucedemotests.ClickFunctionality.clickCookiesSettingAndConfirmTest(ClickFunctionality.java:231)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCookiesSettingAndConfirmTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:04Z" name="afterEachTestMethod" finished-at="2022-06-17T00:35:04Z" duration-ms="725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCookiesSettingAndConfirmTest status=FAILURE method=ClickFunctionality.clickCookiesSettingAndConfirmTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:04Z" name="tearDown" finished-at="2022-06-17T00:35:04Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:04Z" name="setUp" finished-at="2022-06-17T00:35:06Z" duration-ms="1473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickEEATest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:06Z" name="clickEEATest" finished-at="2022-06-17T00:35:14Z" duration-ms="8169" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (752, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1fd59138eac8b30c78c5ec3409d3c3fd, clickElement {id=937c514f-aedb-41e7-a0b6-c66eef75981a}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56900}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56900/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (1fd59138eac8b30c78c5ec3409d3c3fd)] -> xpath: //body/div[4]/div[1]/div[1]/div[2]/ul[1]/li[3]/a[1]]
Session ID: 1fd59138eac8b30c78c5ec3409d3c3fd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (752, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1fd59138eac8b30c78c5ec3409d3c3fd, clickElement {id=937c514f-aedb-41e7-a0b6-c66eef75981a}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56900}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56900/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (1fd59138eac8b30c78c5ec3409d3c3fd)] -> xpath: //body/div[4]/div[1]/div[1]/div[2]/ul[1]/li[3]/a[1]]
Session ID: 1fd59138eac8b30c78c5ec3409d3c3fd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickEEA(SauceLabsPage.java:122)
at saucedemotests.ClickFunctionality.clickEEATest(ClickFunctionality.java:176)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickEEATest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:06Z" name="startExtent" finished-at="2022-06-17T00:35:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickEEATest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:14Z" name="afterEachTestMethod" finished-at="2022-06-17T00:35:15Z" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickEEATest status=FAILURE method=ClickFunctionality.clickEEATest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:15Z" name="tearDown" finished-at="2022-06-17T00:35:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:15Z" name="setUp" finished-at="2022-06-17T00:35:16Z" duration-ms="1538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:16Z" name="startExtent" finished-at="2022-06-17T00:35:16Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickErrorReportingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickErrorReportingTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:16Z" name="clickErrorReportingTest" finished-at="2022-06-17T00:35:24Z" duration-ms="8330" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (553, 868)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2aca2bffb5cd4decf96ba431ba5a79fb, clickElement {id=006fb052-7d26-446e-826d-7c477b053f0f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57008}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57008/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (2aca2bffb5cd4decf96ba431ba5a79fb)] -> xpath: //body/div[@id='template__page']/div[1]/section[2]/div[1]/div[2]/div[4]/a[1]/div[1]/div[1]/div[1]/picture[1]/img[1]]
Session ID: 2aca2bffb5cd4decf96ba431ba5a79fb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (553, 868)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2aca2bffb5cd4decf96ba431ba5a79fb, clickElement {id=006fb052-7d26-446e-826d-7c477b053f0f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57008}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57008/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (2aca2bffb5cd4decf96ba431ba5a79fb)] -> xpath: //body/div[@id='template__page']/div[1]/section[2]/div[1]/div[2]/div[4]/a[1]/div[1]/div[1]/div[1]/picture[1]/img[1]]
Session ID: 2aca2bffb5cd4decf96ba431ba5a79fb
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickErrorReporting(SauceLabsPage.java:105)
at saucedemotests.ClickFunctionality.clickErrorReportingTest(ClickFunctionality.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickErrorReportingTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:24Z" name="afterEachTestMethod" finished-at="2022-06-17T00:35:25Z" duration-ms="724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickErrorReportingTest status=FAILURE method=ClickFunctionality.clickErrorReportingTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:25Z" name="tearDown" finished-at="2022-06-17T00:35:25Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:25Z" name="setUp" finished-at="2022-06-17T00:35:27Z" duration-ms="1502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickPrivacyTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:27Z" name="clickPrivacyTest" finished-at="2022-06-17T00:35:34Z" duration-ms="7276" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (603, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b17fd30a16ad8d76c97a5fac763ebaf, clickElement {id=f37d042f-e88a-4a09-81a7-071646fbda3f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57118}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57118/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4b17fd30a16ad8d76c97a5fac763ebaf)] -> xpath: //span[contains(text(),'Privacy')]]
Session ID: 4b17fd30a16ad8d76c97a5fac763ebaf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (603, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b17fd30a16ad8d76c97a5fac763ebaf, clickElement {id=f37d042f-e88a-4a09-81a7-071646fbda3f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57118}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57118/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4b17fd30a16ad8d76c97a5fac763ebaf)] -> xpath: //span[contains(text(),'Privacy')]]
Session ID: 4b17fd30a16ad8d76c97a5fac763ebaf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickPrivacy(SauceLabsPage.java:118)
at saucedemotests.ClickFunctionality.clickPrivacyTest(ClickFunctionality.java:149)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPrivacyTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:27Z" name="startExtent" finished-at="2022-06-17T00:35:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickPrivacyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:34Z" name="afterEachTestMethod" finished-at="2022-06-17T00:35:35Z" duration-ms="724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPrivacyTest status=FAILURE method=ClickFunctionality.clickPrivacyTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:35Z" name="tearDown" finished-at="2022-06-17T00:35:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:35Z" name="setUp" finished-at="2022-06-17T00:35:36Z" duration-ms="1552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:36Z" name="startExtent" finished-at="2022-06-17T00:35:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickSignUpPrivacyPolicyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickSignUpPrivacyPolicyTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:36Z" name="clickSignUpPrivacyPolicyTest" finished-at="2022-06-17T00:35:55Z" duration-ms="18806" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(text(),'Privacy')]"}
  (Session info: chrome=102.0.5005.115)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8b961800adaeb33a4b1fb74a9fe497dc, findElement {using=xpath, value=//span[contains(text(),'Privacy')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57217}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57217/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8b961800adaeb33a4b1fb74a9fe497dc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(text(),'Privacy')]"}
  (Session info: chrome=102.0.5005.115)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8b961800adaeb33a4b1fb74a9fe497dc, findElement {using=xpath, value=//span[contains(text(),'Privacy')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57217}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57217/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8b961800adaeb33a4b1fb74a9fe497dc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:385)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:377)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickPrivacy(SauceLabsPage.java:118)
at saucedemotests.ClickFunctionality.clickSignUpPrivacyPolicyTest(ClickFunctionality.java:325)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSignUpPrivacyPolicyTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:55Z" name="afterEachTestMethod" finished-at="2022-06-17T00:35:56Z" duration-ms="761" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSignUpPrivacyPolicyTest status=FAILURE method=ClickFunctionality.clickSignUpPrivacyPolicyTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:56Z" name="tearDown" finished-at="2022-06-17T00:35:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:56Z" name="setUp" finished-at="2022-06-17T00:35:57Z" duration-ms="1533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:57Z" name="startExtent" finished-at="2022-06-17T00:35:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickSignUpTermsAndConditionsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickSignUpTermsAndConditionsTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:35:57Z" name="clickSignUpTermsAndConditionsTest" finished-at="2022-06-17T00:36:21Z" duration-ms="23361" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for url to be "https://saucelabs.com/terms-of-service". Current url: "https://saucelabs.com/sign-up" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57387}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57387/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b3042e457fb3f68a4d217ce2c158f4cf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for url to be "https://saucelabs.com/terms-of-service". Current url: "https://saucelabs.com/sign-up" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57387}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57387/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b3042e457fb3f68a4d217ce2c158f4cf
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at saucedemotests.ClickFunctionality.clickSignUpTermsAndConditionsTest(ClickFunctionality.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSignUpTermsAndConditionsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:21Z" name="afterEachTestMethod" finished-at="2022-06-17T00:36:21Z" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSignUpTermsAndConditionsTest status=FAILURE method=ClickFunctionality.clickSignUpTermsAndConditionsTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:21Z" name="tearDown" finished-at="2022-06-17T00:36:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:21Z" name="setUp" finished-at="2022-06-17T00:36:23Z" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:23Z" name="startExtent" finished-at="2022-06-17T00:36:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickSignUpWithEmailTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickSignUpWithEmailTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:23Z" name="clickSignUpWithEmailTest" finished-at="2022-06-17T00:36:47Z" duration-ms="24511" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for url to be "https://saucelabs.com/register". Current url: "https://saucelabs.com/sign-up/register" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57574}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57574/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d46e89b0fe8e1e249dc71c921b078f22]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for url to be "https://saucelabs.com/register". Current url: "https://saucelabs.com/sign-up/register" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57574}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57574/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d46e89b0fe8e1e249dc71c921b078f22
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at saucedemotests.ClickFunctionality.clickSignUpWithEmailTest(ClickFunctionality.java:361)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSignUpWithEmailTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:47Z" name="afterEachTestMethod" finished-at="2022-06-17T00:36:48Z" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSignUpWithEmailTest status=FAILURE method=ClickFunctionality.clickSignUpWithEmailTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:48Z" name="tearDown" finished-at="2022-06-17T00:36:48Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:48Z" name="setUp" finished-at="2022-06-17T00:36:50Z" duration-ms="1403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:50Z" name="startExtent" finished-at="2022-06-17T00:36:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickTermsOfServiceTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickTermsOfServiceTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:50Z" name="clickTermsOfServiceTest" finished-at="2022-06-17T00:36:58Z" duration-ms="7978" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (680, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [add7decdda4835fbe6f678946f2a96a8, clickElement {id=b3eb000a-cefd-43ec-8147-610bf303015d}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57776}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57776/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (add7decdda4835fbe6f678946f2a96a8)] -> xpath: //span[contains(text(),'Terms of Service')]]
Session ID: add7decdda4835fbe6f678946f2a96a8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (680, 5860)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [add7decdda4835fbe6f678946f2a96a8, clickElement {id=b3eb000a-cefd-43ec-8147-610bf303015d}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57776}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57776/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (add7decdda4835fbe6f678946f2a96a8)] -> xpath: //span[contains(text(),'Terms of Service')]]
Session ID: add7decdda4835fbe6f678946f2a96a8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickTermsOfService(SauceLabsPage.java:114)
at saucedemotests.ClickFunctionality.clickTermsOfServiceTest(ClickFunctionality.java:122)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTermsOfServiceTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:58Z" name="afterEachTestMethod" finished-at="2022-06-17T00:36:58Z" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTermsOfServiceTest status=FAILURE method=ClickFunctionality.clickTermsOfServiceTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:58Z" name="setUp" finished-at="2022-06-17T00:37:00Z" duration-ms="1753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:36:58Z" name="tearDown" finished-at="2022-06-17T00:36:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:00Z" name="startExtent" finished-at="2022-06-17T00:37:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickTestAutomationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickTestAutomationTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:00Z" name="clickTestAutomationTest" finished-at="2022-06-17T00:37:08Z" duration-ms="8322" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (760, 1055)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1f28ed26b72fb78f2945fc0b574e8e33, clickElement {id=25ba48f2-ca2f-4504-a592-e8734cbbef9b}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57880}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57880/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (1f28ed26b72fb78f2945fc0b574e8e33)] -> xpath: //h2[contains(text(),'Test Automation')]]
Session ID: 1f28ed26b72fb78f2945fc0b574e8e33]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (760, 1055)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1f28ed26b72fb78f2945fc0b574e8e33, clickElement {id=25ba48f2-ca2f-4504-a592-e8734cbbef9b}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57880}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57880/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (1f28ed26b72fb78f2945fc0b574e8e33)] -> xpath: //h2[contains(text(),'Test Automation')]]
Session ID: 1f28ed26b72fb78f2945fc0b574e8e33
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickTestAutomation(SauceLabsPage.java:110)
at saucedemotests.ClickFunctionality.clickTestAutomationTest(ClickFunctionality.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTestAutomationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:08Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:09Z" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTestAutomationTest status=FAILURE method=ClickFunctionality.clickTestAutomationTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:09Z" name="tearDown" finished-at="2022-06-17T00:37:09Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:09Z" name="setUp" finished-at="2022-06-17T00:37:11Z" duration-ms="1478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickTryItFreeTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:11Z" name="clickTryItFreeTest" finished-at="2022-06-17T00:37:20Z" duration-ms="9483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTryItFreeTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:11Z" name="startExtent" finished-at="2022-06-17T00:37:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickTryItFreeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:20Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:21Z" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTryItFreeTest status=SUCCESS method=ClickFunctionality.clickTryItFreeTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:21Z" name="tearDown" finished-at="2022-06-17T00:37:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:21Z" name="setUp" finished-at="2022-06-17T00:37:22Z" duration-ms="1521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:22Z" name="startExtent" finished-at="2022-06-17T00:37:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ClickFunctionality.clickVisualTestingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickVisualTestingTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:22Z" name="clickVisualTestingTest" finished-at="2022-06-17T00:37:31Z" duration-ms="8563" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (289, 1076)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a2ee0044b7c1ca63f442780b24c5eeb2, clickElement {id=42025472-cce1-4098-8fdd-ab0819a89491}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58127}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58127/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a2ee0044b7c1ca63f442780b24c5eeb2)] -> xpath: //body/div[@id='template__page']/div[1]/section[2]/div[1]/div[2]/div[7]/a[1]]
Session ID: a2ee0044b7c1ca63f442780b24c5eeb2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (289, 1076)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a2ee0044b7c1ca63f442780b24c5eeb2, clickElement {id=42025472-cce1-4098-8fdd-ab0819a89491}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58127}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58127/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a2ee0044b7c1ca63f442780b24c5eeb2)] -> xpath: //body/div[@id='template__page']/div[1]/section[2]/div[1]/div[2]/div[7]/a[1]]
Session ID: a2ee0044b7c1ca63f442780b24c5eeb2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickVisualTesting(SauceLabsPage.java:101)
at saucedemotests.ClickFunctionality.clickVisualTestingTest(ClickFunctionality.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickVisualTestingTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:31Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:32Z" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickVisualTestingTest status=FAILURE method=ClickFunctionality.clickVisualTestingTest()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ClickFunctionality@2f01783a]" started-at="2022-06-17T00:37:32Z" name="tearDown" finished-at="2022-06-17T00:37:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.ClickFunctionality -->
      <class name="saucedemotests.Icons">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:30Z" name="setUp" finished-at="2022-06-17T00:39:32Z" duration-ms="1557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:32Z" name="startExtent" finished-at="2022-06-17T00:39:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.facebookIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="facebookIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:32Z" name="facebookIconTest" finished-at="2022-06-17T00:39:37Z" duration-ms="5353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:37Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:38Z" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=facebookIconTest status=SUCCESS method=Icons.facebookIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:38Z" name="setUp" finished-at="2022-06-17T00:39:39Z" duration-ms="1544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:38Z" name="tearDown" finished-at="2022-06-17T00:39:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:39Z" name="startExtent" finished-at="2022-06-17T00:39:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.linkedInIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="linkedInIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:39Z" name="linkedInIconTest" finished-at="2022-06-17T00:39:45Z" duration-ms="5464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedInIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:45Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:45Z" duration-ms="675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=linkedInIconTest status=SUCCESS method=Icons.linkedInIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:45Z" name="setUp" finished-at="2022-06-17T00:39:47Z" duration-ms="1461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:45Z" name="tearDown" finished-at="2022-06-17T00:39:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:47Z" name="startExtent" finished-at="2022-06-17T00:39:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.Icons.twitterIconTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="twitterIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:47Z" name="twitterIconTest" finished-at="2022-06-17T00:39:52Z" duration-ms="5341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twitterIconTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:52Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:53Z" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=twitterIconTest status=SUCCESS method=Icons.twitterIconTest()[pri:0, instance:saucedemotests.Icons@a8ef162] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.Icons@a8ef162]" started-at="2022-06-17T00:39:53Z" name="tearDown" finished-at="2022-06-17T00:39:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.Icons -->
      <class name="saucedemotests.SearchBar">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.SearchBar@78fa769e]" started-at="2022-06-17T00:40:34Z" name="setUp" finished-at="2022-06-17T00:40:35Z" duration-ms="1486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.SearchBar@78fa769e]" started-at="2022-06-17T00:40:35Z" name="startExtent" finished-at="2022-06-17T00:40:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.SearchBar.searchBarTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchBarTest()[pri:0, instance:saucedemotests.SearchBar@78fa769e]" started-at="2022-06-17T00:40:35Z" name="searchBarTest" finished-at="2022-06-17T00:40:45Z" duration-ms="9767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBarTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.SearchBar@78fa769e]" started-at="2022-06-17T00:40:45Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:46Z" duration-ms="833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBarTest status=SUCCESS method=SearchBar.searchBarTest()[pri:0, instance:saucedemotests.SearchBar@78fa769e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.SearchBar@78fa769e]" started-at="2022-06-17T00:40:46Z" name="tearDown" finished-at="2022-06-17T00:40:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.SearchBar -->
      <class name="saucedemotests.ResetAddToCart">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa]" started-at="2022-06-17T00:40:21Z" name="setUp" finished-at="2022-06-17T00:40:22Z" duration-ms="1422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="menuBarLogoutTest()[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa]" started-at="2022-06-17T00:40:22Z" name="menuBarLogoutTest" finished-at="2022-06-17T00:40:33Z" duration-ms="10758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBarLogoutTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa]" started-at="2022-06-17T00:40:22Z" name="startExtent" finished-at="2022-06-17T00:40:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.ResetAddToCart.menuBarLogoutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa]" started-at="2022-06-17T00:40:33Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:34Z" duration-ms="666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menuBarLogoutTest status=SUCCESS method=ResetAddToCart.menuBarLogoutTest()[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.ResetAddToCart@22f59fa]" started-at="2022-06-17T00:40:34Z" name="tearDown" finished-at="2022-06-17T00:40:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.ResetAddToCart -->
      <class name="saucedemotests.DropDown">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:32Z" name="setUp" finished-at="2022-06-17T00:37:33Z" duration-ms="1674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:33Z" name="startExtent" finished-at="2022-06-17T00:37:33Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownAtoZTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownAtoZTest()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:33Z" name="dragDownAtoZTest" finished-at="2022-06-17T00:37:34Z" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownAtoZTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:34Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:34Z" duration-ms="683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownAtoZTest status=SUCCESS method=DropDown.dragDownAtoZTest()[pri:0, instance:saucedemotests.DropDown@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:34Z" name="setUp" finished-at="2022-06-17T00:37:36Z" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:34Z" name="tearDown" finished-at="2022-06-17T00:37:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:36Z" name="startExtent" finished-at="2022-06-17T00:37:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownHightoLowTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownHightoLowTest()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:36Z" name="dragDownHightoLowTest" finished-at="2022-06-17T00:37:36Z" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownHightoLowTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:36Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:37Z" duration-ms="692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownHightoLowTest status=SUCCESS method=DropDown.dragDownHightoLowTest()[pri:0, instance:saucedemotests.DropDown@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:37Z" name="tearDown" finished-at="2022-06-17T00:37:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:37Z" name="setUp" finished-at="2022-06-17T00:37:38Z" duration-ms="1369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:38Z" name="startExtent" finished-at="2022-06-17T00:37:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownLowtoHighTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownLowtoHighTest()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:38Z" name="dragDownLowtoHighTest" finished-at="2022-06-17T00:37:39Z" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownLowtoHighTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:39Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:39Z" duration-ms="652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownLowtoHighTest status=SUCCESS method=DropDown.dragDownLowtoHighTest()[pri:0, instance:saucedemotests.DropDown@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:39Z" name="setUp" finished-at="2022-06-17T00:37:41Z" duration-ms="1562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:39Z" name="tearDown" finished-at="2022-06-17T00:37:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:41Z" name="startExtent" finished-at="2022-06-17T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.DropDown.dragDownZtoATest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="dragDownZtoATest()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:41Z" name="dragDownZtoATest" finished-at="2022-06-17T00:37:41Z" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDownZtoATest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:41Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:42Z" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragDownZtoATest status=SUCCESS method=DropDown.dragDownZtoATest()[pri:0, instance:saucedemotests.DropDown@68878f6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.DropDown@68878f6d]" started-at="2022-06-17T00:37:42Z" name="tearDown" finished-at="2022-06-17T00:37:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.DropDown -->
      <class name="saucedemotests.CheckOut">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:38Z" name="setUp" finished-at="2022-06-17T00:34:39Z" duration-ms="1435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:39Z" name="startExtent" finished-at="2022-06-17T00:34:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.CheckOut.mulipleItemsCheckOutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="mulipleItemsCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:39Z" name="mulipleItemsCheckOutTest" finished-at="2022-06-17T00:34:40Z" duration-ms="886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulipleItemsCheckOutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:40Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:41Z" duration-ms="678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mulipleItemsCheckOutTest status=SUCCESS method=CheckOut.mulipleItemsCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@68746f22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:41Z" name="tearDown" finished-at="2022-06-17T00:34:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:41Z" name="setUp" finished-at="2022-06-17T00:34:42Z" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:42Z" name="startExtent" finished-at="2022-06-17T00:34:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.CheckOut.singleItemCheckOutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="singleItemCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:42Z" name="singleItemCheckOutTest" finished-at="2022-06-17T00:34:43Z" duration-ms="796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleItemCheckOutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:43Z" name="afterEachTestMethod" finished-at="2022-06-17T00:34:44Z" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=singleItemCheckOutTest status=SUCCESS method=CheckOut.singleItemCheckOutTest()[pri:0, instance:saucedemotests.CheckOut@68746f22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.CheckOut@68746f22]" started-at="2022-06-17T00:34:44Z" name="tearDown" finished-at="2022-06-17T00:34:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.CheckOut -->
      <class name="saucedemotests.PlayVideo">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.PlayVideo@7fd7a283]" started-at="2022-06-17T00:40:10Z" name="setUp" finished-at="2022-06-17T00:40:12Z" duration-ms="1456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.PlayVideo@7fd7a283]" started-at="2022-06-17T00:40:12Z" name="startExtent" finished-at="2022-06-17T00:40:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.PlayVideo.playVideoTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="playVideoTest()[pri:0, instance:saucedemotests.PlayVideo@7fd7a283]" started-at="2022-06-17T00:40:12Z" name="playVideoTest" finished-at="2022-06-17T00:40:20Z" duration-ms="8421" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (232, 653)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49fc0df6fb5c9bef7618dbfe24380ba0, clickElement {id=ba8d5332-e9e5-427e-90dc-cea18397d189}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59643}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59643/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (49fc0df6fb5c9bef7618dbfe24380ba0)] -> xpath: //body/div[@id='template__page']/div[1]/section[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[3]/a[1]]
Session ID: 49fc0df6fb5c9bef7618dbfe24380ba0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (232, 653)
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49fc0df6fb5c9bef7618dbfe24380ba0, clickElement {id=ba8d5332-e9e5-427e-90dc-cea18397d189}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59643}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59643/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (49fc0df6fb5c9bef7618dbfe24380ba0)] -> xpath: //body/div[@id='template__page']/div[1]/section[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[3]/a[1]]
Session ID: 49fc0df6fb5c9bef7618dbfe24380ba0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.SauceLabsPage.clickVideoLink(SauceLabsPage.java:155)
at saucedemotests.PlayVideo.playVideoTest(PlayVideo.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playVideoTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.PlayVideo@7fd7a283]" started-at="2022-06-17T00:40:20Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:21Z" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=playVideoTest status=FAILURE method=PlayVideo.playVideoTest()[pri:0, instance:saucedemotests.PlayVideo@7fd7a283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.PlayVideo@7fd7a283]" started-at="2022-06-17T00:40:21Z" name="tearDown" finished-at="2022-06-17T00:40:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.PlayVideo -->
      <class name="saucedemotests.HoverOver">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:42Z" name="setUp" finished-at="2022-06-17T00:37:44Z" duration-ms="1664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:44Z" name="startExtent" finished-at="2022-06-17T00:37:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverAPITestingAndClickTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverAPITestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:44Z" name="hoverOverAPITestingAndClickTest" finished-at="2022-06-17T00:37:51Z" duration-ms="7325" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c89e172ae5a043d6fab5e9f9132e35a8, actions {actions=[org.openqa.selenium.interactions.Sequence@75adb1c0]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58324}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58324/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c89e172ae5a043d6fab5e9f9132e35a8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c89e172ae5a043d6fab5e9f9132e35a8, actions {actions=[org.openqa.selenium.interactions.Sequence@75adb1c0]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58324}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58324/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c89e172ae5a043d6fab5e9f9132e35a8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:635)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:656)
at saucedemotests.HoverOver.hoverOverAPITestingAndClickTest(HoverOver.java:296)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverAPITestingAndClickTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:51Z" name="afterEachTestMethod" finished-at="2022-06-17T00:37:52Z" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverAPITestingAndClickTest status=FAILURE method=HoverOver.hoverOverAPITestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:52Z" name="tearDown" finished-at="2022-06-17T00:37:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:52Z" name="setUp" finished-at="2022-06-17T00:37:53Z" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:53Z" name="startExtent" finished-at="2022-06-17T00:37:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverCompanyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverCompanyTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:37:53Z" name="hoverOverCompanyTest" finished-at="2022-06-17T00:38:01Z" duration-ms="7500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverCompanyTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:01Z" name="afterEachTestMethod" finished-at="2022-06-17T00:38:01Z" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverCompanyTest status=SUCCESS method=HoverOver.hoverOverCompanyTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:01Z" name="tearDown" finished-at="2022-06-17T00:38:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:01Z" name="setUp" finished-at="2022-06-17T00:38:03Z" duration-ms="1517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:03Z" name="startExtent" finished-at="2022-06-17T00:38:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverContactTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverContactTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:03Z" name="hoverOverContactTest" finished-at="2022-06-17T00:38:18Z" duration-ms="15307" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a611ace94399e26db172d65c24df556a, clickElement {id=ce68f42d-bf4d-45b3-991e-7fd31f295842}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58529}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58529/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a611ace94399e26db172d65c24df556a)] -> css selector: #about_sidebar_link]
Session ID: a611ace94399e26db172d65c24df556a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'DESKTOP-DNJOJAA', ip: '172.16.225.38', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a611ace94399e26db172d65c24df556a, clickElement {id=ce68f42d-bf4d-45b3-991e-7fd31f295842}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\EvilT\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58529}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58529/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a611ace94399e26db172d65c24df556a)] -> css selector: #about_sidebar_link]
Session ID: a611ace94399e26db172d65c24df556a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy17.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:218)
at saucedemopages.InventoryPage.aboutSideBar(InventoryPage.java:122)
at saucedemotests.HoverOver.hoverOverContactTest(HoverOver.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverContactTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:18Z" name="afterEachTestMethod" finished-at="2022-06-17T00:38:19Z" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverContactTest status=FAILURE method=HoverOver.hoverOverContactTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:19Z" name="tearDown" finished-at="2022-06-17T00:38:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:19Z" name="setUp" finished-at="2022-06-17T00:38:20Z" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:20Z" name="startExtent" finished-at="2022-06-17T00:38:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverCrossBrowserTestingAndClickTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverCrossBrowserTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:20Z" name="hoverOverCrossBrowserTestingAndClickTest" finished-at="2022-06-17T00:38:28Z" duration-ms="7739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverCrossBrowserTestingAndClickTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:28Z" name="afterEachTestMethod" finished-at="2022-06-17T00:38:29Z" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverCrossBrowserTestingAndClickTest status=SUCCESS method=HoverOver.hoverOverCrossBrowserTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:29Z" name="tearDown" finished-at="2022-06-17T00:38:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:29Z" name="setUp" finished-at="2022-06-17T00:38:30Z" duration-ms="1553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hoverOverLowCodeTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:30Z" name="hoverOverLowCodeTestingAndClickTest" finished-at="2022-06-17T00:38:38Z" duration-ms="7823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverLowCodeTestingAndClickTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:30Z" name="startExtent" finished-at="2022-06-17T00:38:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverLowCodeTestingAndClickTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:38Z" name="afterEachTestMethod" finished-at="2022-06-17T00:38:39Z" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverLowCodeTestingAndClickTest status=SUCCESS method=HoverOver.hoverOverLowCodeTestingAndClickTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:39Z" name="tearDown" finished-at="2022-06-17T00:38:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:39Z" name="setUp" finished-at="2022-06-17T00:38:40Z" duration-ms="1468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:40Z" name="startExtent" finished-at="2022-06-17T00:38:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverMobileTestingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="hoverOverMobileTestingTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:40Z" name="hoverOverMobileTestingTest" finished-at="2022-06-17T00:38:50Z" duration-ms="9968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverMobileTestingTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:50Z" name="afterEachTestMethod" finished-at="2022-06-17T00:38:51Z" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverMobileTestingTest status=SUCCESS method=HoverOver.hoverOverMobileTestingTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:51Z" name="setUp" finished-at="2022-06-17T00:38:52Z" duration-ms="1498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:51Z" name="tearDown" finished-at="2022-06-17T00:38:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="hoverOverPlatformTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:52Z" name="hoverOverPlatformTest" finished-at="2022-06-17T00:39:00Z" duration-ms="7550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverPlatformTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:38:52Z" name="startExtent" finished-at="2022-06-17T00:38:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverPlatformTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:00Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:01Z" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverPlatformTest status=SUCCESS method=HoverOver.hoverOverPlatformTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:01Z" name="tearDown" finished-at="2022-06-17T00:39:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:01Z" name="setUp" finished-at="2022-06-17T00:39:02Z" duration-ms="1419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hoverOverPricingTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:02Z" name="hoverOverPricingTest" finished-at="2022-06-17T00:39:11Z" duration-ms="9231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverPricingTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:02Z" name="startExtent" finished-at="2022-06-17T00:39:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverPricingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:11Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:12Z" duration-ms="783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverPricingTest status=SUCCESS method=HoverOver.hoverOverPricingTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:12Z" name="tearDown" finished-at="2022-06-17T00:39:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:12Z" name="setUp" finished-at="2022-06-17T00:39:14Z" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="hoverOverResourcesTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:14Z" name="hoverOverResourcesTest" finished-at="2022-06-17T00:39:21Z" duration-ms="7098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverResourcesTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:14Z" name="startExtent" finished-at="2022-06-17T00:39:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverResourcesTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:21Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:22Z" duration-ms="736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverResourcesTest status=SUCCESS method=HoverOver.hoverOverResourcesTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:22Z" name="setUp" finished-at="2022-06-17T00:39:23Z" duration-ms="1516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:22Z" name="tearDown" finished-at="2022-06-17T00:39:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="hoverOverSolutionsTest()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:23Z" name="hoverOverSolutionsTest" finished-at="2022-06-17T00:39:29Z" duration-ms="6319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverOverSolutionsTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:23Z" name="startExtent" finished-at="2022-06-17T00:39:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void saucedemotests.HoverOver.hoverOverSolutionsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:29Z" name="afterEachTestMethod" finished-at="2022-06-17T00:39:30Z" duration-ms="714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverOverSolutionsTest status=SUCCESS method=HoverOver.hoverOverSolutionsTest()[pri:0, instance:saucedemotests.HoverOver@41488b16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:saucedemotests.HoverOver@41488b16]" started-at="2022-06-17T00:39:30Z" name="tearDown" finished-at="2022-06-17T00:39:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- saucedemotests.HoverOver -->
    </test> <!-- com.SauceDemo Tests -->
    <test started-at="2022-06-17T00:40:46Z" name="com.GlobalSQA Tests" finished-at="2022-06-17T00:41:51Z" duration-ms="64756">
      <class name="globalsqatests.DeleteButton">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:34:17Z" name="extentSetup" finished-at="2022-06-17T00:34:17Z" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1bf3af3d]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory C:\Users\EvilT\IdeaProjects\FinalFrameworkProject\web-automation-framework-crip\target\surefire-reports\CRIP Automation Script\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:40:46Z" name="setUp" finished-at="2022-06-17T00:40:48Z" duration-ms="2046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:40:48Z" name="startExtent" finished-at="2022-06-17T00:40:48Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.DeleteButton.deleteCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:40:48Z" name="deleteCustomerTest" finished-at="2022-06-17T00:40:49Z" duration-ms="754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomerTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:40:49Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:49Z" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteCustomerTest status=SUCCESS method=DeleteButton.deleteCustomerTest()[pri:0, instance:globalsqatests.DeleteButton@452e19ca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:40:49Z" name="tearDown" finished-at="2022-06-17T00:40:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:globalsqatests.DeleteButton@452e19ca]" started-at="2022-06-17T00:41:51Z" name="generateReport" finished-at="2022-06-17T00:41:51Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- globalsqatests.DeleteButton -->
      <class name="globalsqatests.AddCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AddCustomer@15f47664]" started-at="2022-06-17T00:41:05Z" name="setUp" finished-at="2022-06-17T00:41:07Z" duration-ms="1763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@15f47664]" started-at="2022-06-17T00:41:07Z" name="addCustomerTest" finished-at="2022-06-17T00:41:08Z" duration-ms="858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AddCustomer@15f47664]" started-at="2022-06-17T00:41:07Z" name="startExtent" finished-at="2022-06-17T00:41:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AddCustomer.addCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AddCustomer@15f47664]" started-at="2022-06-17T00:41:08Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:09Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerTest status=SUCCESS method=AddCustomer.addCustomerTest()[pri:0, instance:globalsqatests.AddCustomer@15f47664] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AddCustomer@15f47664]" started-at="2022-06-17T00:41:09Z" name="tearDown" finished-at="2022-06-17T00:41:09Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AddCustomer -->
      <class name="globalsqatests.WithdrawlButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.WithdrawlButton@471a9022]" started-at="2022-06-17T00:41:09Z" name="setUp" finished-at="2022-06-17T00:41:11Z" duration-ms="1751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.WithdrawlButton@471a9022]" started-at="2022-06-17T00:41:11Z" name="startExtent" finished-at="2022-06-17T00:41:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.WithdrawlButton.withdrawlButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="withdrawlButtonTest()[pri:0, instance:globalsqatests.WithdrawlButton@471a9022]" started-at="2022-06-17T00:41:11Z" name="withdrawlButtonTest" finished-at="2022-06-17T00:41:12Z" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawlButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.WithdrawlButton@471a9022]" started-at="2022-06-17T00:41:12Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:12Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withdrawlButtonTest status=SUCCESS method=WithdrawlButton.withdrawlButtonTest()[pri:0, instance:globalsqatests.WithdrawlButton@471a9022] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.WithdrawlButton@471a9022]" started-at="2022-06-17T00:41:12Z" name="tearDown" finished-at="2022-06-17T00:41:12Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.WithdrawlButton -->
      <class name="globalsqatests.DepositButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.DepositButton@dc9876b]" started-at="2022-06-17T00:41:12Z" name="setUp" finished-at="2022-06-17T00:41:14Z" duration-ms="1537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.DepositButton@dc9876b]" started-at="2022-06-17T00:41:14Z" name="startExtent" finished-at="2022-06-17T00:41:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.DepositButton.depositButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="depositButtonTest()[pri:0, instance:globalsqatests.DepositButton@dc9876b]" started-at="2022-06-17T00:41:14Z" name="depositButtonTest" finished-at="2022-06-17T00:41:15Z" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.DepositButton@dc9876b]" started-at="2022-06-17T00:41:15Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:16Z" duration-ms="706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=depositButtonTest status=SUCCESS method=DepositButton.depositButtonTest()[pri:0, instance:globalsqatests.DepositButton@dc9876b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.DepositButton@dc9876b]" started-at="2022-06-17T00:41:16Z" name="tearDown" finished-at="2022-06-17T00:41:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.DepositButton -->
      <class name="globalsqatests.SearchCustomer">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.SearchCustomer@e25951c]" started-at="2022-06-17T00:41:02Z" name="setUp" finished-at="2022-06-17T00:41:04Z" duration-ms="1662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchCustomerTest()[pri:0, instance:globalsqatests.SearchCustomer@e25951c]" started-at="2022-06-17T00:41:04Z" name="searchCustomerTest" finished-at="2022-06-17T00:41:05Z" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCustomerTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.SearchCustomer@e25951c]" started-at="2022-06-17T00:41:04Z" name="startExtent" finished-at="2022-06-17T00:41:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.SearchCustomer.searchCustomerTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.SearchCustomer@e25951c]" started-at="2022-06-17T00:41:05Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:05Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCustomerTest status=SUCCESS method=SearchCustomer.searchCustomerTest()[pri:0, instance:globalsqatests.SearchCustomer@e25951c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.SearchCustomer@e25951c]" started-at="2022-06-17T00:41:05Z" name="tearDown" finished-at="2022-06-17T00:41:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.SearchCustomer -->
      <class name="globalsqatests.LogoutButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.LogoutButton@a1f72f5]" started-at="2022-06-17T00:41:25Z" name="setUp" finished-at="2022-06-17T00:41:26Z" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.LogoutButton@a1f72f5]" started-at="2022-06-17T00:41:26Z" name="startExtent" finished-at="2022-06-17T00:41:26Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.LogoutButton.logOutTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="logOutTest()[pri:0, instance:globalsqatests.LogoutButton@a1f72f5]" started-at="2022-06-17T00:41:26Z" name="logOutTest" finished-at="2022-06-17T00:41:33Z" duration-ms="6564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.LogoutButton@a1f72f5]" started-at="2022-06-17T00:41:33Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:34Z" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logOutTest status=SUCCESS method=LogoutButton.logOutTest()[pri:0, instance:globalsqatests.LogoutButton@a1f72f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.LogoutButton@a1f72f5]" started-at="2022-06-17T00:41:34Z" name="tearDown" finished-at="2022-06-17T00:41:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.LogoutButton -->
      <class name="globalsqatests.OpenAccount">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.OpenAccount@2f666ebb]" started-at="2022-06-17T00:41:16Z" name="setUp" finished-at="2022-06-17T00:41:17Z" duration-ms="1632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.OpenAccount@2f666ebb]" started-at="2022-06-17T00:41:17Z" name="startExtent" finished-at="2022-06-17T00:41:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.OpenAccount.openAccountTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="openAccountTest()[pri:0, instance:globalsqatests.OpenAccount@2f666ebb]" started-at="2022-06-17T00:41:17Z" name="openAccountTest" finished-at="2022-06-17T00:41:18Z" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAccountTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.OpenAccount@2f666ebb]" started-at="2022-06-17T00:41:18Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:19Z" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openAccountTest status=SUCCESS method=OpenAccount.openAccountTest()[pri:0, instance:globalsqatests.OpenAccount@2f666ebb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.OpenAccount@2f666ebb]" started-at="2022-06-17T00:41:19Z" name="tearDown" finished-at="2022-06-17T00:41:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.OpenAccount -->
      <class name="globalsqatests.HomeButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:34Z" name="setUp" finished-at="2022-06-17T00:41:35Z" duration-ms="1666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:35Z" name="bankManagerHomeButtonTest" finished-at="2022-06-17T00:41:36Z" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerHomeButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:35Z" name="startExtent" finished-at="2022-06-17T00:41:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.bankManagerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:36Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:37Z" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerHomeButtonTest status=SUCCESS method=HomeButton.bankManagerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:37Z" name="setUp" finished-at="2022-06-17T00:41:38Z" duration-ms="1488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:37Z" name="tearDown" finished-at="2022-06-17T00:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:38Z" name="startExtent" finished-at="2022-06-17T00:41:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.HomeButton.customerHomeButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:38Z" name="customerHomeButtonTest" finished-at="2022-06-17T00:41:39Z" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerHomeButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:39Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:39Z" duration-ms="660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerHomeButtonTest status=SUCCESS method=HomeButton.customerHomeButtonTest()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.HomeButton@4b2c5e02]" started-at="2022-06-17T00:41:39Z" name="tearDown" finished-at="2022-06-17T00:41:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.HomeButton -->
      <class name="globalsqatests.BackButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BackButton@6f8e8894]" started-at="2022-06-17T00:40:53Z" name="setUp" finished-at="2022-06-17T00:40:54Z" duration-ms="1577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="backButtonTest()[pri:0, instance:globalsqatests.BackButton@6f8e8894]" started-at="2022-06-17T00:40:54Z" name="backButtonTest" finished-at="2022-06-17T00:40:55Z" duration-ms="986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BackButton@6f8e8894]" started-at="2022-06-17T00:40:54Z" name="startExtent" finished-at="2022-06-17T00:40:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BackButton.backButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BackButton@6f8e8894]" started-at="2022-06-17T00:40:55Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:56Z" duration-ms="670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=backButtonTest status=SUCCESS method=BackButton.backButtonTest()[pri:0, instance:globalsqatests.BackButton@6f8e8894] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BackButton@6f8e8894]" started-at="2022-06-17T00:40:56Z" name="tearDown" finished-at="2022-06-17T00:40:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.BackButton -->
      <class name="globalsqatests.CustomerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a]" started-at="2022-06-17T00:41:39Z" name="setUp" finished-at="2022-06-17T00:41:41Z" duration-ms="1649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a]" started-at="2022-06-17T00:41:41Z" name="startExtent" finished-at="2022-06-17T00:41:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.CustomerLoginButton.customerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a]" started-at="2022-06-17T00:41:41Z" name="customerLoginButtonTest" finished-at="2022-06-17T00:41:44Z" duration-ms="3283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerLoginButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a]" started-at="2022-06-17T00:41:44Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:45Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=customerLoginButtonTest status=SUCCESS method=CustomerLoginButton.customerLoginButtonTest()[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.CustomerLoginButton@57a3e26a]" started-at="2022-06-17T00:41:45Z" name="tearDown" finished-at="2022-06-17T00:41:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.CustomerLoginButton -->
      <class name="globalsqatests.ResetButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.ResetButton@6b0d80ed]" started-at="2022-06-17T00:40:49Z" name="setUp" finished-at="2022-06-17T00:40:51Z" duration-ms="1723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.ResetButton@6b0d80ed]" started-at="2022-06-17T00:40:51Z" name="startExtent" finished-at="2022-06-17T00:40:51Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.ResetButton.resetButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@6b0d80ed]" started-at="2022-06-17T00:40:51Z" name="resetButtonTest" finished-at="2022-06-17T00:40:52Z" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetButtonTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.ResetButton@6b0d80ed]" started-at="2022-06-17T00:40:52Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:53Z" duration-ms="678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=resetButtonTest status=SUCCESS method=ResetButton.resetButtonTest()[pri:0, instance:globalsqatests.ResetButton@6b0d80ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.ResetButton@6b0d80ed]" started-at="2022-06-17T00:40:53Z" name="tearDown" finished-at="2022-06-17T00:40:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.ResetButton -->
      <class name="globalsqatests.AccountNumberDropDown">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820]" started-at="2022-06-17T00:40:56Z" name="setUp" finished-at="2022-06-17T00:40:58Z" duration-ms="1737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820]" started-at="2022-06-17T00:40:58Z" name="startExtent" finished-at="2022-06-17T00:40:58Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.AccountNumberDropDown.accountNumberDropDownTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="accountNumberDropDownTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820]" started-at="2022-06-17T00:40:58Z" name="accountNumberDropDownTest" finished-at="2022-06-17T00:40:58Z" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountNumberDropDownTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820]" started-at="2022-06-17T00:40:58Z" name="afterEachTestMethod" finished-at="2022-06-17T00:40:59Z" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountNumberDropDownTest status=SUCCESS method=AccountNumberDropDown.accountNumberDropDownTest()[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.AccountNumberDropDown@3cfdd820]" started-at="2022-06-17T00:40:59Z" name="tearDown" finished-at="2022-06-17T00:40:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.AccountNumberDropDown -->
      <class name="globalsqatests.BankManagerLoginButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9]" started-at="2022-06-17T00:41:45Z" name="setUp" finished-at="2022-06-17T00:41:47Z" duration-ms="1679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9]" started-at="2022-06-17T00:41:47Z" name="bankManagerLoginButtonTest" finished-at="2022-06-17T00:41:50Z" duration-ms="3285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerLoginButtonTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9]" started-at="2022-06-17T00:41:47Z" name="startExtent" finished-at="2022-06-17T00:41:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.BankManagerLoginButton.bankManagerLoginButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9]" started-at="2022-06-17T00:41:50Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:51Z" duration-ms="680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bankManagerLoginButtonTest status=SUCCESS method=BankManagerLoginButton.bankManagerLoginButtonTest()[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.BankManagerLoginButton@75c56eb9]" started-at="2022-06-17T00:41:51Z" name="tearDown" finished-at="2022-06-17T00:41:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.BankManagerLoginButton -->
      <class name="globalsqatests.TransactionsButton">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.TransactionsButton@928763c]" started-at="2022-06-17T00:40:59Z" name="setUp" finished-at="2022-06-17T00:41:01Z" duration-ms="1740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="transactionsButton()[pri:0, instance:globalsqatests.TransactionsButton@928763c]" started-at="2022-06-17T00:41:01Z" name="transactionsButton" finished-at="2022-06-17T00:41:02Z" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsButton -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.TransactionsButton@928763c]" started-at="2022-06-17T00:41:01Z" name="startExtent" finished-at="2022-06-17T00:41:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.TransactionsButton.transactionsButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.TransactionsButton@928763c]" started-at="2022-06-17T00:41:02Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:02Z" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsButton status=SUCCESS method=TransactionsButton.transactionsButton()[pri:0, instance:globalsqatests.TransactionsButton@928763c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.TransactionsButton@928763c]" started-at="2022-06-17T00:41:02Z" name="tearDown" finished-at="2022-06-17T00:41:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.TransactionsButton -->
      <class name="globalsqatests.UserLogin">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:19Z" name="setUp" finished-at="2022-06-17T00:41:20Z" duration-ms="1518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:20Z" name="startExtent" finished-at="2022-06-17T00:41:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.harryPotterLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:20Z" name="harryPotterLoginTest" finished-at="2022-06-17T00:41:21Z" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- harryPotterLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:21Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:22Z" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=harryPotterLoginTest status=SUCCESS method=UserLogin.harryPotterLoginTest()[pri:0, instance:globalsqatests.UserLogin@19976a65] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:22Z" name="tearDown" finished-at="2022-06-17T00:41:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:22Z" name="setUp" finished-at="2022-06-17T00:41:23Z" duration-ms="1894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:23Z" name="startExtent" finished-at="2022-06-17T00:41:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void globalsqatests.UserLogin.ronWeaslyLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:23Z" name="ronWeaslyLoginTest" finished-at="2022-06-17T00:41:24Z" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ronWeaslyLoginTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:24Z" name="afterEachTestMethod" finished-at="2022-06-17T00:41:25Z" duration-ms="665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ronWeaslyLoginTest status=SUCCESS method=UserLogin.ronWeaslyLoginTest()[pri:0, instance:globalsqatests.UserLogin@19976a65] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:globalsqatests.UserLogin@19976a65]" started-at="2022-06-17T00:41:25Z" name="tearDown" finished-at="2022-06-17T00:41:25Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- globalsqatests.UserLogin -->
    </test> <!-- com.GlobalSQA Tests -->
  </suite> <!-- CRIP Automation Script -->
</testng-results>
